{"version":3,"file":"dynamicList.5aeae18d.js","sources":["../src/components/TableInfo/fieldFile/dynamicList.tsx"],"sourcesContent":["import React, { useEffect, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Input, Form } from 'antd';\r\nimport { useUpdateEffect } from 'ahooks';\r\n// import { FormComponentProps } from 'antd/lib/form';\r\nimport { useDynamicList } from 'ahooks';\r\nimport {connect} from \"dva\";\r\nimport type { Iconf } from '../TableInfo';\r\nimport { wrapContext } from '../TableInfo';\r\nimport { ShowData } from './_css_comm';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\n\r\nconst FromList = styled(Form.Item)`\r\n  && {\r\n    height: 100%;\r\n    padding: 1vh;\r\n    border: 1px solid #ccc;\r\n  }\r\n  .items {\r\n    margin: 5px 0;\r\n  }\r\n`;\r\ninterface IconfInput extends Iconf {\r\n  placeholder?: string;\r\n  // keyName:string;\r\n}\r\n\r\ninterface Iinput {\r\n  name: string;\r\n  conf: IconfInput;\r\n  rules: any;\r\n}\r\n\r\nconst DynamicList: React.FC<Iinput> = (props) => {\r\n  const theme: any = useContext(wrapContext);\r\n  const { list, resetList, insert, remove, getKey } = useDynamicList<any>([]);\r\n  const _: any = props.conf;\r\n  const { name } = props;\r\n  const Row = (index: number, item: any) => {\r\n    return (\r\n      <div className=\"items\" key={getKey(index)}>\r\n        <Input\r\n          style={{ width: 300 }}\r\n          placeholder={_.placeholder}\r\n          value={item[_.keyName]}\r\n          //   defaultValue={item[_.keyName]}\r\n          onChange={(e) => {\r\n            const _list: any = list;\r\n            _list[index][_.keyName] = e.target.value;\r\n            resetList(_list);\r\n            theme.form.setFields([\r\n              {\r\n                name,\r\n                value: _list,\r\n              },\r\n            ]);\r\n          }}\r\n        />\r\n        {list.length > 1 && (\r\n          <MinusCircleOutlined\r\n            style={{ marginLeft: 8 }}\r\n            onClick={() => {\r\n              remove(index);\r\n            }}\r\n          />\r\n        )}\r\n        <PlusCircleOutlined\r\n          style={{ marginLeft: 8 }}\r\n          onClick={() => {\r\n            insert(index + 1, {});\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  const filterData = (props: any) => {\r\n    const data = theme.form.getFieldsValue();\r\n    resetList(data[name].length == 0 ? [{}] : data[name]);\r\n    return data[name];\r\n  };\r\n\r\n  // 只在初始化时进行加载\r\n  useEffect(() => {\r\n    filterData(props);\r\n  }, []);\r\n  // 只在初始化时进行加载\r\n  useUpdateEffect(() => {\r\n    theme.form.setFields([\r\n      {\r\n        name,\r\n        value: list,\r\n      },\r\n    ]);\r\n  }, [list]);\r\n\r\n  return (\r\n    <wrapContext.Consumer>\r\n      {(_data) => {\r\n        switch (_data.state) {\r\n          case 'default':\r\n            return <ShowData>{_.defaultValue || '　'}</ShowData>;\r\n            break;\r\n          case 'edit':\r\n          case 'new':\r\n          case 'disabled':\r\n            return (\r\n              <FromList name={name} rules={props.rules}>\r\n                {list.map((ele, index) => {\r\n                  return Row(index, ele);\r\n                })}\r\n              </FromList>\r\n            );\r\n            break;\r\n        }\r\n      }}\r\n    </wrapContext.Consumer>\r\n  );\r\n};\r\nexport default connect(({}) => ({}))(DynamicList);\r\n"],"names":["FromList","styled","Form","DynamicList","props","theme","useContext","wrapContext","list","resetList","insert","remove","getKey","useDynamicList","_","name","Row","index","item","React","Input","e","_list","MinusCircleOutlined","PlusCircleOutlined","filterData","props2","data","useEffect","useUpdateEffect","_data","ShowData"],"mappings":"0kBAYA,MAAMA,EAAWC,EAAOC,EAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqB3BC,EAAgCC,GAAW,CACzC,MAAAC,EAAaC,qBAAWC,CAAW,EACnC,CACN,KAAAC,EACM,UAAAC,EACA,OAAAC,EACJ,OAAAC,EACG,OAAAC,CAAc,EAAQC,EAAiB,CAAA,CAAA,EACrCC,EAAAV,EAAA,KACC,CAAoB,KAAAW,CAEpB,EAAAX,EAEAY,EAAA,CAAAC,EAAiBC,IACIC,EAAA,cAAA,MAAA,CACnB,UAAa,QACb,IAAAP,EAAUK,CAAK,CACf,EAAqBE,EAAA,cAAAC,EAAA,CACnB,MAAA,CACE,MAAA,GAAA,EAEF,YAAAN,EAAA,YAAA,MACDI,EAAAJ,EAAA,SACH,SAAAO,GAAA,CAED,MAAcC,EAAAd,EAEXc,EAASL,GAAAH,EAAA,SAAcO,EAAA,OAAA,QACRC,CAAA,EACbjB,EAAA,KAAY,UAAA,CAAA,CACd,KAAAU,EAGH,MAAAO,CACC,CAAA,CAAA,EAEE,CAAO,EAAAd,EAAA,OAAA,GAAaW,EAAA,cAAAI,EAAA,CACtB,MAAA,CAEJ,WAAA,CAEJ,EACM,QAAA,IAAa,CACXZ,EAAAM,CAAa,CACT,CACV,CAAA,EAAYE,EAAA,cAAAK,EAAA,CACd,MAAA,CAGA,WAAgB,CACd,EACE,QAAC,IAAA,CAELd,EAAAO,EAAsB,EAAA,CAAA,CAAA,CACpB,CACE,CAAA,CAAA,EAEEQ,EAAOC,GAAA,CACT,MAAAC,EAAAtB,EAAA,KAAA,eAAA,EACF,OAAAI,EAACkB,EAAAZ,GAAA,QAAA,EAAA,CAAA,CAAA,CAAA,EAAAY,EAAAZ,EAAA,EACMY,EAAAZ,EAET,EAGMa,OAAAA,EAAAA,QAAAA,UAAQ,IAAM,CACPH,EAAA,CACH,EAAA,CAAA,CAAA,EACAI,EAAA,IAAA,CACGxB,EAAA,KAAA,UAAA,CAAA,CACA,KAAAU,EACA,MAAAP,CACH,CAAA,CAAA,CACG,EAAS,CAAAA,CAAA,CAAA,EAAyBW,EAAA,cAAAZ,EAAA,SAAA,KAAAuB,GAAA,CAAA,OAC3BA,EAAA,WACG,UACT,OACFX,EAAA,cAAAY,EAAA,KAAAjB,EAAA,cAAA,QAAA,MAEF,WAGR,UAEJ,WACA,uBAAgDd,EAAA"}
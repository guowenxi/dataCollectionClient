{"version":3,"file":"inputTableEdit.3cda5c6e.js","sources":["../src/components/TableInfo/fieldFile/inputTableEdit.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {connect} from \"dva\";\r\n\r\nimport { Select as ASelect, Input, InputNumber } from 'antd';\r\nimport type { Iconf } from '../TableInfo';\r\nimport { wrapContext } from '../TableInfo';\r\nimport { ShowData } from './_css_comm';\r\nimport { Form } from 'antd';\r\n\r\nimport { MinusCircleOutlined, PlusCircleOutlined } from '@ant-design/icons';\r\n\r\nconst FromList = styled.div`\r\n  padding: 1vh;\r\n  border: 1px solid #d9d9d9;\r\n  .table-title-box {\r\n    display: flex;\r\n    flex-flow: row;\r\n    margin: 0;\r\n    padding: 0;\r\n    line-height: 3.76vh;\r\n    border: 1px solid #d9d9d9;\r\n  }\r\n  .title-item-option {\r\n    flex: 1;\r\n    text-align: center;\r\n  }\r\n  .title-item {\r\n    box-shadow: 1px 1px 0 #d9d9d9;\r\n    &::last-child {\r\n      border-right: none;\r\n    }\r\n  }\r\n  .option-btn-box {\r\n    flex: 1;\r\n    height: 4.3vh;\r\n    box-shadow: 1px 1px 0 #d9d9d9;\r\n    .ant-form-item-control-input-content {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      font-size: 1vw;\r\n      .icon-item {\r\n        margin-right: 1vw;\r\n      }\r\n    }\r\n  }\r\n  .input-item {\r\n    height: 100%;\r\n    text-align: center;\r\n    border: none;\r\n    border-right: 1px solid #d9d9d9;\r\n    outline: none;\r\n  }\r\n  .ant-input-number {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    border-right: 1px solid #d9d9d9;\r\n    .ant-input-number-input-wrap {\r\n      width: 100%;\r\n      input {\r\n        text-align: center;\r\n      }\r\n    }\r\n  }\r\n  .input-content-box {\r\n    border-left: 1px solid #d9d9d9;\r\n  }\r\n  .input-content-item {\r\n    height: 4.3vh;\r\n    border-bottom: 1px solid #d9d9d9;\r\n  }\r\n  .row-index-box {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-right: 1px solid #d9d9d9;\r\n  }\r\n  .row-text-index {\r\n    border-bottom: 1px solid #d9d9d9;\r\n  }\r\n  .count-box {\r\n    display: flex;\r\n    margin: 0;\r\n    padding: 0;\r\n    line-height: 3.76vh;\r\n    .row-index-box {\r\n      border: 1px solid #d9d9d9;\r\n      border-top: none;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Ioptions {\r\n  name: string;\r\n  id: number;\r\n}\r\ninterface IconfSelect extends Iconf {\r\n  placeholder?: string;\r\n  relationType: string;\r\n  options: Ioptions[];\r\n  defaultValue: string;\r\n}\r\ninterface ISelect {\r\n  dispatch?: any;\r\n  conf: IconfSelect;\r\n  name: string;\r\n  rules: any;\r\n}\r\n\r\nconst inputTable: React.FC<ISelect> = (props) => {\r\n  const theme: any = useContext(wrapContext);\r\n  const _: any = props.conf;\r\n  const { name } = props;\r\n\r\n  const [list, setList] = useState([]);\r\n\r\n  const [columnList, setColumnList] = useState(_.columnList ? _.columnList : []);\r\n\r\n  const filterData = (_: any) => {\r\n    const data = theme.form.getFieldsValue();\r\n    let list = [];\r\n    if (!data[name] || data[name].length === 0) {\r\n      list = [{}];\r\n    } else {\r\n      list = data[name];\r\n    }\r\n    setList(list);\r\n    theme.form.setFields([\r\n      {\r\n        name,\r\n        value: list,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  // 只在初始化时进行加载\r\n  useEffect(() => {\r\n    filterData(props);\r\n  }, []);\r\n\r\n  /* list变化时加载 */\r\n  useEffect(() => {\r\n    countNum(null);\r\n  }, [list]);\r\n\r\n  const inputDisplay = (item: any, index: number) => {\r\n    let dom: any = '';\r\n    if (item.type === 'number' && item.range) {\r\n      dom = (\r\n        <InputNumber\r\n          min={item.range ? item.range[0] : ''}\r\n          max={item.range ? item.range[1] : ''}\r\n          className=\"input-item\"\r\n          onChange={(value) => {\r\n            changeValue(value, item.key, index);\r\n          }}\r\n          disabled={!!item.disabled}\r\n        />\r\n      );\r\n    } else if (item.type === 'number') {\r\n      dom = (\r\n        <InputNumber\r\n          className=\"input-item\"\r\n          onChange={(value) => {\r\n            changeValue(value, item.key, index);\r\n          }}\r\n          disabled={!!item.disabled}\r\n        />\r\n      );\r\n    } else {\r\n      dom = (\r\n        <Input\r\n          className=\"input-item\"\r\n          onChange={(value) => {\r\n            changeValue(value, item.key, index);\r\n          }}\r\n          disabled={!!item.disabled}\r\n        />\r\n      );\r\n    }\r\n    return dom;\r\n  };\r\n\r\n  /* 计算总数 */\r\n  const countNum = (_: any) => {\r\n    const data = theme.form.getFieldsValue();\r\n    const list = data[name];\r\n    if (Array.isArray(list)) {\r\n      columnList.map((item01: any) => {\r\n        if (item01.type == 'number') {\r\n          item01.countNum = 0;\r\n          list.map((item02: any) => {\r\n            for (const key in item02) {\r\n              if (item01.key === key) {\r\n                if (item02 && item02[key]) {\r\n                  item01.countNum += item02[key];\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n    const dataList = columnList;\r\n    setColumnList(JSON.parse(JSON.stringify(dataList)));\r\n  };\r\n\r\n  /* 改变输入框中的值 */\r\n  const changeValue = (value: any, key: any, index: any) => {\r\n    const data = theme.form.getFieldsValue();\r\n    data[name][index][key] = value.target ? value.target.value : value;\r\n    setList(data);\r\n  };\r\n\r\n  return (\r\n    <wrapContext.Consumer>\r\n      {(_data: any): any => {\r\n        switch (_data.state) {\r\n          case 'default':\r\n            // return <ShowData>{VAL}</ShowData>;\r\n            return <ShowData></ShowData>;\r\n            break;\r\n          case 'edit':\r\n          case 'new':\r\n          case 'disabled':\r\n            return (\r\n              <Form.List name={name}>\r\n                {(fields, { add }) => (\r\n                  <FromList>\r\n                    <ul className=\"table-title-box\">\r\n                      {_.isRowIndex ? (\r\n                        <li\r\n                          className=\"row-index-box\"\r\n                          style={{ width: _.rowIndexWidth ? _.rowIndexWidth : '5%' }}\r\n                        >\r\n                          {_.isRowIndex}\r\n                        </li>\r\n                      ) : null}\r\n                      {columnList.map((item: any, index: number) => {\r\n                        return (\r\n                          <li\r\n                            key={index}\r\n                            style={{\r\n                              width: item.width,\r\n                              textAlign: item.align ? item.align : 'left',\r\n                            }}\r\n                            className=\"title-item\"\r\n                          >\r\n                            {item.title}\r\n                          </li>\r\n                        );\r\n                      })}\r\n\r\n                      {!_.isNeedAdd ? <li className=\"title-item title-item-option\">操作</li> : null}\r\n                    </ul>\r\n                    {fields.map((field: any, index: number) => (\r\n                      <div\r\n                        key={index}\r\n                        style={{ display: 'flex' }}\r\n                        className=\"input-content-box\"\r\n                      >\r\n                        {_.isRowIndex ? (\r\n                          <div\r\n                            className=\"row-index-box row-text-index\"\r\n                            style={{ width: _.rowIndexWidth ? _.rowIndexWidth : '5%' }}\r\n                          >\r\n                            {index + 1}\r\n                          </div>\r\n                        ) : null}\r\n\r\n                        {columnList.map((item: any) => {\r\n                          return (\r\n                            <Form.Item\r\n                              {...field}\r\n                              name={[field.name, item.key]}\r\n                              fieldKey={[field.fieldKey, item.key]}\r\n                              style={{\r\n                                width: item.width,\r\n                                textAlign: item.align ? item.align : 'left',\r\n                              }}\r\n                              rules={props.rules}\r\n                              className=\"input-content-item\"\r\n                            >\r\n                              {inputDisplay(item, index)}\r\n                            </Form.Item>\r\n                          );\r\n                        })}\r\n                        <Form.Item className=\"option-btn-box\">\r\n                          {!_.isNeedAdd ? (\r\n                            <PlusCircleOutlined\r\n                              onClick={() => {\r\n                                add();\r\n                                const data = theme.form.getFieldsValue();\r\n                                setList(data[name]);\r\n                              }}\r\n                              className=\"icon-item\"\r\n                            ></PlusCircleOutlined>\r\n                          ) : null}\r\n\r\n                          {!_.isNeedAdd ? (\r\n                            <MinusCircleOutlined\r\n                              onClick={() => {\r\n                                const data = theme.form.getFieldsValue();\r\n                                data[name].splice(field.name, 1);\r\n                                let list = [];\r\n                                if (!data[name] || data[name].length === 0) {\r\n                                  list = [{}];\r\n                                } else {\r\n                                  list = data[name];\r\n                                }\r\n                                setList(list);\r\n                                theme.form.setFields([\r\n                                  {\r\n                                    name,\r\n                                    value: list,\r\n                                  },\r\n                                ]);\r\n                              }}\r\n                            />\r\n                          ) : null}\r\n                        </Form.Item>\r\n                      </div>\r\n                    ))}\r\n\r\n                    {/* 合计 */}\r\n                    {!_.isNeedTotal ? (\r\n                      <ul className=\"count-box\">\r\n                        {_.isRowIndex ? (\r\n                          <li\r\n                            className=\"row-index-box\"\r\n                            style={{ width: _.rowIndexWidth ? _.rowIndexWidth : '5%' }}\r\n                          >\r\n                            合计\r\n                          </li>\r\n                        ) : null}\r\n                        {columnList.map((item: any, index: number) => {\r\n                          return (\r\n                            <li\r\n                              key={index}\r\n                              style={{\r\n                                width: item.width,\r\n                                textAlign: item.align ? item.align : 'left',\r\n                              }}\r\n                              className=\"title-item\"\r\n                            >\r\n                              {item.countNum}\r\n                            </li>\r\n                          );\r\n                        })}\r\n                        {!_.isNeedAdd ? <li className=\"title-item title-item-option\"></li> : null}\r\n                      </ul>\r\n                    ) : null}\r\n                  </FromList>\r\n                )}\r\n              </Form.List>\r\n            );\r\n            break;\r\n        }\r\n      }}\r\n    </wrapContext.Consumer>\r\n  );\r\n};\r\nexport default connect(({ select }: {select: any}) => ({\r\n  select,\r\n}))(inputTable);\r\n"],"names":["FromList","styled","inputTable","props","theme","useContext","wrapContext","_","name","list","setList","useState","columnList","setColumnList","_2","data","list2","useEffect","filterData","countNum","inputDisplay","item","index","dom","React","InputNumber","value","changeValue","Input","item01","item02","key","dataList","_data","Form","fields","add","field","__spreadProps","__spreadValues","PlusCircleOutlined","MinusCircleOutlined"],"mappings":"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"}
{"version":3,"file":"TreeBox.d4cb3dfc.js","sources":["../src/components/TreeBox/TreeBox.tsx"],"sourcesContent":["import React, { useState, useEffect,useMemo } from 'react';\nimport { Input, Button ,Tree} from 'antd';\nimport styled from 'styled-components';\n\nimport { string } from 'prop-types';\nimport type { AProps } from '@/globalTyping';\n\nconst { Search } = Input;\n\nconst ContentBox = styled.div`\n  position: relative;\n  left:0;\n  width: 100%; \n  .search-box{\n    margin:1vh 0;\n  }\n`;\n\n\ninterface MProps extends AProps {\n  dispatch?: any,\n  /**\n   * class名\n   */\n  className: string,\n  /**\n   * 树形选择的keys\n   */\n  checkedTreeKeys: (number | string)[],\n  /**\n   * 选择树形的回调\n   */\n  onCheck: object,\n  /**\n   * 选择树形的回调\n   */\n  onSelect: object,\n  /**\n   * 点击时的回调\n   */\n  changeKey?: any,\n  selectable: boolean;\n  data: [\n    {\n      name: string,\n      id: number | string,\n      children: [\n        {\n          name: string,\n          id: number | string\n        }\n      ]\n    }\n  ]\n}\n\nconst TreeBox = (props: MProps) => {\n  const { data,checkedTreeKeys,className,changeKey } = props;\n\n  const [treeListData,setTreeListData]=useState([]);\n\n  const [searchValue,setSearchValue]=useState(\"\");/*  */\n\n  const [autoExpandParent,setAutoExpandParent]=useState(false);\n\n  const [expandedKeys,setExpandedKeys]=useState([]);\n\n\n\n  /* 处理数据 */\n  const dealTreeData=(data,index)=>{\n    if(Array.isArray(data)&&data.length){\n      data.map((item,idx)=>{\n        item.title=item.name;\n        item.key=item.id;\n        item.keyIndex=`${index}-${idx}`\n        if(item.children){\n          dealTreeData(item.children,item.keyIndex)\n        }\n      })\n    }\n    setTreeListData(data)\n  }\n\n\n\n\n\n  useMemo(() => {\n\n  }, [changeKey]);\n\n  useEffect(() => {\n    dealTreeData(data,0)\n  }, [])\n\n\n  /* 树形图选择 */\n   const onCheck=(checkedKeys, info)=>{\n    props.onCheck(checkedKeys, info);\n  };\n   /* 树形图选择 */\n   const onSelect=(checkedKeys, info)=>{\n    props.onSelect(checkedKeys, info);\n  }\n\n  /* 改变数据 */\n  const getParentKey = (title, tree,data) => {\n    if(Array.isArray(tree)){\n      tree.map((item,idx)=>{\n        if(item.title.indexOf(title)>=0){\n         data.push(item.keyIndex)\n        }\n        if(item.children){\n          getParentKey(title,item.children,data)\n        }\n      })\n    }\n    return data\n  };\n\n  /* 搜索框改变的时候触发 */\n  const onChange=(e)=>{\n    const  {value}  = e.target;\n    let titleText;\n    if(value){\n      titleText=getParentKey(value, treeListData,[]);\n    }\n    let data=[];\n    if(titleText){\n     titleText.map((item01,index01)=>{\n        data=getParentKeyData(item01, treeListData,data)\n      })\n    }\n    setExpandedKeys(data)\n    setSearchValue(value);\n    setAutoExpandParent(false)\n  }\n\n\n  const getParentKeyData = (key, tree,data) => {\n    const keyLength=key.length;\n    for (let i = 0; i < tree.length; i++) {\n      if(tree[i].keyIndex.length>keyLength){\n        if(tree[i].keyIndex.substr(0,keyLength)===key){\n          data.push(tree[i].key)\n        }\n      }else if(tree[i].keyIndex===key.substr(0,tree[i].keyIndex.length)){\n          data.push(tree[i].key)\n        }\n      if(tree[i].children){\n        getParentKeyData(key, tree[i].children,data);\n      }\n    }\n    return data;\n   };\n\n  const onExpand=(expandedKeys)=>{\n    setExpandedKeys(expandedKeys);\n     setAutoExpandParent(false)\n  }\n\n  return (\n    <ContentBox className={className || \"\"}>\n      <div className='search-box'>\n      <Search  placeholder=\"请输入关键字\" value={searchValue} onChange={onChange} />\n      </div>\n     <Tree\n          className='hide-file-icon'\n          checkable={props.checkable!=null&&props.checkable!=undefined?props.checkable:true}\n          onCheck={onCheck}\n          onSelect={onSelect}\n          treeData={treeListData}\n          selectable={props.selectable!=null&&props.selectable!=undefined?props.selectable:false}\n          checkedKeys={checkedTreeKeys}\n          autoExpandParent={autoExpandParent}\n          onExpand={onExpand}\n          expandedKeys={expandedKeys}\n      ></Tree>\n    </ContentBox>\n  );\n};\n\nexport default TreeBox;\n"],"names":["Search","Input","ContentBox","styled","TreeBox","props","data","checkedTreeKeys","className","changeKey","treeListData","setTreeListData","useState","searchValue","setSearchValue","autoExpandParent","setAutoExpandParent","expandedKeys","setExpandedKeys","dealTreeData","data2","index","item","idx","useMemo","useEffect","onCheck","checkedKeys","info","onSelect","getParentKey","title","tree","e","value","titleText","item01","index01","key","keyLength","i","getParentKeyData","onExpand","expandedKeys2","React","onChange","Tree"],"mappings":"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"}
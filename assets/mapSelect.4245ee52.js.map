{"version":3,"file":"mapSelect.4245ee52.js","sources":["../src/components/TableInfo/fieldFile/mapSelect.tsx"],"sourcesContent":["import React, { useState, useMemo,useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {connect} from \"dva\";\r\nimport { Input as AInput } from 'antd';\r\nimport type { Iconf} from '../TableInfo';\r\nimport { wrapContext } from '../TableInfo';\r\nimport { ShowData } from './_css_comm';\r\nimport { Modal } from 'antd';\r\nimport { Map, Marker } from 'react-amap';\r\nimport { EnvironmentFilled } from '@ant-design/icons';\r\nimport { Form } from 'antd';\r\nimport { filterStr } from '@/utils/utils';\r\n\r\n\r\nimport { G } from '@/global';\r\n\r\nconst { amapkey, mapCenter } = G;\r\n\r\nconst Minput = styled(AInput)`\r\n  position: relative;\r\n  && {\r\n    padding: 1vh;\r\n  }\r\n`;\r\nconst CompleteInput = styled<any>(AInput)`\r\n  position: relative;\r\n  && {\r\n    padding: 1vh;\r\n  }\r\n`;\r\nconst AModal = styled(Modal)`\r\n  && {\r\n    width: 70vw !important;\r\n    .ant-modal {\r\n    }\r\n  }\r\n`;\r\nconst WrapMap = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 60vh;\r\n`;\r\nconst MainMap = styled<any>(Map)`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\nconst MapIcon = styled(EnvironmentFilled)`\r\n  color: #ccc;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  right: 10px;\r\n  font-size: 20px;\r\n  top: 10px;\r\n`;\r\n\r\ninterface IconfInput extends Iconf {\r\n  placeholder?: string;\r\n}\r\ninterface ImapSelect {\r\n  dispatch?: any;\r\n  conf: IconfInput;\r\n  name: string;\r\n  rules: any;\r\n}\r\n\r\nlet map: any= {};\r\nconst MapSelect: React.FC<ImapSelect> = (props) => {\r\n  const _: any = props.conf;\r\n  const {name} = props;\r\n  const theme: any = useContext(wrapContext);\r\n  const [VISIBLE, setVISIBLE] = useState(false);\r\n  const [POINT, setPOINT] = useState<any>([]);\r\n  const [SENTER, setSENTER] = useState(mapCenter);\r\n  const [ADDRESS, setADDRESS] = useState('');\r\n  const [geocoder, setgeocoder] = useState<any>({});\r\n  const [] = useState({});\r\n\r\n  // 默认加载?\r\n  useMemo(() => {\r\n  }, []);\r\n  const mapEvents: any = {\r\n    created: (ins: any) => {\r\n      // setmap(ins)\r\n      map = ins;\r\n      AMap.plugin('AMap.Geocoder', () => {\r\n        setgeocoder(\r\n          new AMap.Geocoder({\r\n            city: '010', // 城市，默认：“全国”\r\n          }),\r\n        );\r\n      });\r\n      AMap.plugin(['AMap.Autocomplete', 'AMap.PlaceSearch', 'AMap.CitySearch'], () => {\r\n        const placeSearch = new AMap.PlaceSearch({\r\n          pageSize: 10, // 单页显示结果条数\r\n          pageIndex: 1, // 页码\r\n          city: '温州', // 兴趣点城市\r\n          citylimit: true, // 是否强制限制在设置的城市内搜索\r\n          map, // 展现结果的地图实例\r\n          // autoFitView: true // 是否自动调整地图视野使绘制的 Marker点都处于视口的可见范围\r\n        });\r\n\r\n        AMap.event.addListener(\r\n          new AMap.Autocomplete({\r\n            // city 限定城市，默认全国\r\n            city: '温州',\r\n            // input 为绑定输入提示功能的input的DOM ID\r\n            input: 'amapInput',\r\n          }),\r\n          'select',\r\n          (e) => {\r\n            // TODO 针对选中的poi实现自己的功能\r\n            placeSearch.setCity(e.poi.adcode);\r\n            placeSearch.search(e.poi.name);\r\n            setADDRESS(e.poi.name);\r\n            setPOINT([e.poi.location.lng, e.poi.location.lat]);\r\n            map.setZoomAndCenter([e.poi.location.lng, e.poi.location.lat]);\r\n          },\r\n        );\r\n      });\r\n\r\n\r\n      // console.log(ins.Geocoder());\r\n    },\r\n    click: (e: any) => {\r\n      geocoder &&\r\n        geocoder.getAddress(e.lnglat, (status: any, result: any) => {\r\n          console.log(result.regeocode);\r\n          setADDRESS(filterStr(result.regeocode.formattedAddress,\"浙江省温州市\"));\r\n          setPOINT([e.lnglat.lng, e.lnglat.lat]);\r\n          // 地图上的数据操作;\r\n          // state.info.address=filterAddress(result.regeocode.formattedAddress);\r\n          // _this.state.info.longitude=e.lnglat.lng;\r\n          // _this.state.info.latitude=e.lnglat.lat;\r\n          // _this.setState({\r\n          //   center:{\r\n          //     longitude:e.lnglat.lng,\r\n          //     latitude:e.lnglat.lat,\r\n          //   },\r\n          //   info:_this.state.info\r\n          // });\r\n        });\r\n    },\r\n  };\r\n\r\n  const selAddress = () => {\r\n\r\n    const data =  theme.form.getFieldsValue();\r\n    if(data[name] !='' && data.lnglat){\r\n      setPOINT(data.lnglat);\r\n      setADDRESS(data[name])\r\n      setSENTER(data.lnglat);\r\n    }\r\n    setVISIBLE(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    theme.form.setFieldsValue({\r\n      [name]:ADDRESS,\r\n    });\r\n    // 如果没有lnglat 则创建这个字段\r\n    theme.form.setFields([{\r\n      name:\"lnglat\",\r\n      value:POINT\r\n    }])\r\n    setVISIBLE(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVISIBLE(false);\r\n  };\r\n\r\n  return (\r\n    <wrapContext.Consumer>\r\n      {(_data): any => {\r\n        switch (_data.state) {\r\n          case 'default':\r\n            return (\r\n              <ShowData>\r\n                {_.defaultValue || '　'}\r\n                <MapIcon onClick={selAddress} />\r\n              </ShowData>\r\n            );\r\n            break;\r\n          case 'edit':\r\n          case 'new':\r\n          case 'disabled':\r\n            return <div>\r\n              <Form.Item name={name}\r\n              rules={props.rules}>\r\n                <Minput\r\n                  autoComplete=\"off\"\r\n                  disabled={_data.state === 'disabled'}\r\n                  placeholder={_.placeholder}\r\n                  size={_.size}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item name={\"lnglat\"} noStyle></Form.Item>\r\n              <MapIcon onClick={selAddress} />\r\n              <AModal title=\"地址\" visible={VISIBLE} onOk={handleOk} onCancel={handleCancel}>\r\n                <CompleteInput\r\n                  autocomplete=\"off\"\r\n                  id=\"amapInput\"\r\n                  disabled={_data.state === 'disabled'}\r\n                  placeholder={'请选择地址'}\r\n                  value={ADDRESS}\r\n                  onChange={(e: { target: { value: React.SetStateAction<string>; }; }) => {\r\n                    setADDRESS(e.target.value);\r\n                  }}\r\n                  size={_.size}\r\n                />\r\n                <WrapMap>\r\n                  <MainMap\r\n                    events={mapEvents}\r\n                    center={SENTER}\r\n                    zoom={13}\r\n                    amapkey={amapkey}\r\n                  >\r\n                    {POINT[0] ? <Marker position={POINT}></Marker> : null}\r\n                  </MainMap>\r\n                </WrapMap>\r\n              </AModal>\r\n            </div>\r\n            break;\r\n        }\r\n      }}\r\n    </wrapContext.Consumer>\r\n  );\r\n};\r\nexport default connect(({}) => ({}))(MapSelect);\r\n"],"names":["amapkey","mapCenter","G","Minput","styled","AInput","CompleteInput","AModal","Modal","WrapMap","MainMap","Map","MapIcon","EnvironmentFilled","map","MapSelect","_","props","name","theme","useContext","wrapContext","VISIBLE","setVISIBLE","useState","POINT","setPOINT","SENTER","setSENTER","ADDRESS","setADDRESS","geocoder","setgeocoder","useMemo","mapEvents","ins","placeSearch","e","status","result","selAddress","data","handleOk","handleCancel","React","_data","ShowData","Form","Marker","mapSelect","connect"],"mappings":"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"}
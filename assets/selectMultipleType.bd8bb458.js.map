{"version":3,"file":"selectMultipleType.bd8bb458.js","sources":["../src/components/TableInfo/fieldFile/selectMultipleType.tsx"],"sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport styled from 'styled-components';\nimport {connect} from \"dva\";\nimport {Select as ASelect} from 'antd';\nimport type {Iconf} from '../TableInfo';\nimport {wrapContext} from '../TableInfo';\nimport {ShowData} from './_css_comm';\nimport {Form} from 'antd';\nimport type {AProps} from '@/globalTyping';\n\n\nconst {Option} = ASelect;\n\n\nconst MSelect = styled<any>(ASelect)`\n  && {\n    width: 100%;\n    height: 43px;\n\n    .ant-select-selector {\n      height: 100%;\n      //padding:1vh;\n    }\n\n    .ant-select-selection-search-input {\n      height: 100% !important;\n    }\n\n    .ant-select-selection-item {\n    }\n\n  }\n`;\n\ninterface Ioptions {\n  name: string,\n  id: number\n}\n\ninterface IconfSelect extends Iconf {\n  placeholder?: string,\n  relationType: string,\n  options: Ioptions[],\n  defaultValue: string\n}\n\ninterface MProps extends AProps {\n  dispatch: any;\n  conf: IconfSelect;\n  name: string;\n  rules: any;\n}\n\nconst Select = (props: MProps) => {\n  const _: any = props.conf;\n  const {name} = props;\n  // const { dispatch } = props;\n  const {dispatch} = props\n\n  const theme: any = useContext(wrapContext);\n  const [OPTION, setOPTION] = useState([]);\n  const [VAL, setVAL] = useState(\"　\");\n\n  theme.event$.useSubscription((data: any) => {\n    const i = data.relateNames.indexOf(name);\n    if (i >= 0) {\n      _.params[data.relatekeys[i]] = data.value;\n      theme.form.setFieldsValue({\n        [name]: [],\n      });\n      filterData(\"select\", _)\n    }\n  });\n\n  async function filterData(namespace: string, conf: any) {\n    let _op = [];\n    if (conf.relationType) {\n      _op = props[namespace][conf.relationType];\n    } else if (conf.url) {\n      // 暂不支持使用url地址 ---\n      // 已修复 可以使用url地址\n      // select组件需要copy代码片段过去\n      const data = await dispatch({\n        type: 'common/requestData',\n        url: conf.url,\n        method: 'GET',\n        payload: {\n          ...conf.params\n        },\n      })\n\n      if (conf.keyName) {\n        data.map(function (item: any) {\n          item.name = item[conf.keyName];\n          item.id = item[conf.keyId];\n        })\n      }\n\n\n      // const { data, error, loading } = useRequest()\n      _op = data;\n    } else {\n      _op = conf.options;\n    }\n    setOPTION(_op);\n    filterDefaultValue(_op, _.defaultValue)\n  }\n\n  function filterDefaultValue(OPTION: Ioptions[], id: string) {\n    if (Number(id)) {\n      const val: any = OPTION.find(function (item) {\n        return Number(item.id) === Number(id);\n      })\n      setVAL(val.name)\n    }\n  }\n\n  const filterDefaultData = function () {\n    const data = theme.form.getFieldValue(name);\n\n    let _data: any = [];\n    switch (typeof data) {\n      case 'string':\n        data == '' ? _data = [] : _data = data.split(',');\n        break;\n      case 'object':\n        data == [] ? _data = [] : _data = data;\n        break;\n      default:\n        _data = [];\n        break;\n    }\n    theme.form.setFieldsValue({[name]: _data});\n    // theme.form.setFieldsValue({[name.substring(0, name.length - 3)]: _data});\n  };\n  // 只在初始化时进行加载\n  useEffect(() => {\n    //过滤默认列表\n    filterData(\"select\", _)\n    //过滤默认展示列表字段\n    filterDefaultData();\n  }, [])\n\n  return (\n    <wrapContext.Consumer>\n      {(_data) => {\n        switch (_data.state) {\n          case 'default':\n            return <ShowData>{VAL}</ShowData>;\n            break;\n          case 'edit':\n          case \"new\" :\n          case 'disabled':\n            return (\n              <Form.Item name={name} rules={props.rules}>\n                <MSelect\n                  initialValue=\"null\"\n                  mode=\"multiple\"\n                  placeholder={_.placeholder}\n                  showSearch\n                  disabled={_data.state === 'disabled'}\n                  onChange={(value: any, option: any) => {\n                    theme.form.setFieldsValue({[name]: value});\n                    theme.form.setFieldsValue({[name.substring(0, name.length - 3)]: option});\n                  }}\n                  filterOption={(input: any, option: any) => {\n                    return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                  }}\n                >\n                  {\n                    OPTION.map((item: any) => {\n                      return <Option title={item[_.keyName || 'name']} value={item[_.keyId || 'id'].toString()}\n                                     peopleType={item.peopleType ? item.peopleType : ''}\n                                     participantId={item.id ? item.id : ''}\n                                     key={item[_.keyId || 'id']}>{item[_.keyName || 'name']}</Option>\n                    })\n                  }\n                </MSelect>\n              </Form.Item>\n\n            );\n            break;\n        }\n      }}\n    </wrapContext.Consumer>\n  );\n};\nexport default connect(({\n                          select\n                        }: { select: any }) => ({\n  select\n}))(Select);\n"],"names":["Option","ASelect","MSelect","styled","Select","props","_","name","dispatch","theme","useContext","wrapContext","OPTION","setOPTION","useState","VAL","data","i","filterData","namespace","conf","__async","_op","__spreadValues","item","filterDefaultValue","OPTION2","id","setVAL","val","filterDefaultData","_data","useEffect","React","ShowData","Form","value","option","input"],"mappings":"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"}
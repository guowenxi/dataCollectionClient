{"version":3,"file":"selectMultipleTable.5d5067a0.js","sources":["../src/components/TableInfo/fieldFile/selectMultipleTable.tsx"],"sourcesContent":["import React, { useState, useEffect,useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {connect} from \"dva\";\r\n\r\nimport { Select as ASelect,Button,Modal,Tag  } from 'antd';\r\nimport type { Iconf} from '../TableInfo';\r\nimport { wrapContext } from '../TableInfo';\r\nimport { ShowData } from './_css_comm';\r\nimport { Form } from 'antd';\r\nimport MixinTable from '../../MixinTable/MixinTable';\r\n\r\n\r\n\r\nimport {useList} from 'react-use'\r\n\r\n\r\nconst SelectTableBox= styled.div`\r\nborder:1px solid #ccc;\r\n  display:flex;\r\n  align-items:center;\r\n  .select-main-box{\r\n    display:flex;\r\n    flex-flow:row  wrap;\r\n    .select-item-box{\r\n      margin:1vh;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NButton=styled(Button)`\r\n  margin:0 1vh;\r\n`\r\n\r\n\r\n\r\n\r\nconst AModal = styled(Modal)`\r\n&& {\r\n  width: 70vw !important;\r\n  .select-tree-modal-box {\r\n    width:100%;\r\n    display:flex;\r\n    .tree-box-main-box{\r\n      width:30%;\r\n      margin-right:1vw;\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\ninterface Ioptions {\r\n  name: string,\r\n  id: number\r\n}\r\ninterface IconfSelect extends Iconf {\r\n  placeholder?: string,\r\n  relationType: string,\r\n  options: Ioptions[],\r\n  defaultValue: string \r\n}\r\ninterface ISelect {\r\n  dispatch?: any;\r\n  conf: IconfSelect;\r\n  name: string;\r\n  rules: any;\r\n}\r\n\r\nconst Select: React.FC<ISelect> = (props) => {\r\n  const _: any = props.conf;\r\n  const {name} = props;\r\n\r\n  const __ =_.tableSetting?_.tableSetting:{}\r\n  const theme: any = useContext(wrapContext);\r\n  const [OPTION, {set}] = useList();\r\n  const [VAL, setVAL]  = useState();\r\n  const [VISIBLE,setVISIBLE]=useState(false);\r\n  const [SELECTROWKEYS, setSELECTROWKEYS] = useState([]);\r\n  function filterData(){\r\n    let _op = [];\r\n    const data=theme.form.getFieldValue();\r\n    _op = data[_.itemKey]?data[_.itemKey]:[];\r\n    const value=data[name]?data[name]:[]\r\n    set(_op);\r\n    setVAL(value)\r\n  }\r\n\r\n    // 只在初始化时进行加载\r\n  useEffect(()=>{\r\n    filterData()\r\n  },[])\r\n\r\n  /* 删除 */\r\n  // const deleteTableData=(item:any,index:any)=>{\r\n  //   OPTION.splice(index,1);\r\n  //   VAL.splice(index,1);\r\n  //   set(OPTION);\r\n  //   setVAL(VAL);\r\n  // }\r\n\r\n\r\n  return (\r\n    <wrapContext.Consumer>\r\n      {(_data) => {\r\n        switch (_data.state) {\r\n          case 'default':\r\n            return <ShowData>{VAL}</ShowData>;\r\n            break;\r\n          case 'edit':\r\n            case \"new\" :\r\n          case 'disabled':\r\n            return (\r\n              <Form.Item name={name} noStyle\r\n              rules={props.rules}>\r\n                <SelectTableBox>\r\n                    <div className=\"select-main-box\">\r\n                      {\r\n                          Array.isArray(OPTION)?OPTION.map((item: any)=>{\r\n                            return  <Tag \r\n                            className=\"select-item-box\"\r\n                            // closable\r\n                            // onClose={e => {\r\n                            //   e.preventDefault();\r\n                            //   deleteTableData(item,idx)\r\n                            // }}\r\n                            >{item.name}</Tag>\r\n                          }):\"\"\r\n                  }\r\n                    </div>\r\n                     {/* <MSelect\r\n                     value={VAL}\r\n                      mode=\"multiple\"\r\n                      placeholder={_.placeholder}\r\n                      showSearch\r\n                      disabled={_data.state === 'disabled' ? true : false}\r\n                      filterOption={(input, option) =>{\r\n                        return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                      }}\r\n                      open={false}\r\n                    >\r\n                        {\r\n                    Array.isArray(OPTION)?OPTION.map((item,idx:number)=>{\r\n                      return  <Option title={item.name} value={item.id.toString()}>{item.name}</Option>\r\n                    }):\"\"\r\n                  }\r\n                  </MSelect> */}\r\n\r\n                  <NButton  type=\"primary\" onClick={()=>(setVISIBLE(true))} >\r\n                    {_.btnText}\r\n                  </NButton>\r\n              </SelectTableBox>\r\n\r\n                <AModal title={_.modalTitle} visible={VISIBLE}\r\n                 onOk={()=>{\r\n                  const ids: any = [];\r\n                  const data: any = SELECTROWKEYS.map((item: any)=>{\r\n                    ids.push(__.idKey ? item[__.idKey] :item.id);\r\n                    return {\r\n                      ...item,\r\n                      name:__.nameKey ? item[__.nameKey] : item.name,\r\n                      id:__.idKey ? item[__.idKey] :item.id,\r\n                    }\r\n                  });\r\n\r\n                  /// ///////\r\n                  theme.form.setFieldsValue({\r\n                    [name]:ids,\r\n                  });\r\n                  /// /////\r\n                  set(data),\r\n                  setVAL(ids),\r\n                  setVISIBLE(false);\r\n                 }}\r\n                 onCancel={()=>(setVISIBLE(false))}>\r\n                  <MixinTable url={__.url}\r\n                  changeKey={VISIBLE}\r\n                   params={__.params} \r\n                  columns={__.columnsList}\r\n                  rowSelection={(res: any,data: any)=>{\r\n                    res.map((item01: any,index01: number)=>{\r\n                      OPTION.map((item02: any)=>{\r\n                        if(item01===item02.id){\r\n                          data[index01]=item02;\r\n                        }\r\n                      })\r\n                    })\r\n                    setSELECTROWKEYS(data);\r\n                    // setOPTION(data);\r\n                    // setVAL(data)\r\n                  }}\r\n                  rowKey=\"item\" \r\n                  defaultValue={VAL}\r\n                      ></MixinTable>\r\n                </AModal>\r\n\r\n              </Form.Item>\r\n\r\n            );\r\n            break;\r\n        }\r\n      }}\r\n    </wrapContext.Consumer>\r\n  );\r\n};\r\nexport default connect(({\r\n  select\r\n}: {select: any}) => ({\r\n  select\r\n}))(Select);\r\n"],"names":["SelectTableBox","styled","NButton","Button","AModal","Modal","Select","props","_","name","__","theme","useContext","wrapContext","OPTION","set","useList","setVAL","useState","VISIBLE","setVISIBLE","SELECTROWKEYS","setSELECTROWKEYS","filterData","_op","data","value","useEffect","React","_data","ShowData","VAL","item","Tag","ids","__spreadProps","__spreadValues","MixinTable","res","item01","index01","item02","selectMultipleTable","connect"],"mappings":"27BAiBA,MAAMA,EAAgBC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAavBC,EAAQD,EAAOE,CAAM;AAAA;AAAA,EAOrBC,EAASH,EAAOI,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+BrBC,EAA4BC,GAAW,CAC3C,MAAMC,EAASD,EAAM,KACf,CAEN,KAAAE,CACM,EAAAF,EACAG,EAASF,EAAA,aAAiBA,EAAA,aAAA,CAAA,EAC1BG,EAAYC,qBAAcC,CAAA,EAC1B,CAACC,EAAA,CACP,IAAAC,CACA,CAAA,EAAAC,EAAqB,EACf,GAAMC,CAAC,EAAAC,EAAA,QAAA,SAAA,EACL,CAAAC,EAAWC,CAAK,EAAcF,EAAA,QAAA,SAAA,EAAA,EACpC,CAAAG,EAAaC,KAA0B,QAAA,SAAA,CAAA,CAAA,EACvC,SAAYC,GAAW,CACvB,IAAIC,EAAG,CAAA,EACP,MAAAC,EAAYd,EAAA,KAAA,cAAA,EACda,EAAAC,EAAAjB,EAAA,SAAAiB,EAAAjB,EAAA,SAAA,GAGA,MAAAkB,EAAcD,EAAAhB,GAAAgB,EAAAhB,GAAA,GACDM,EAAAS,CAAA,EACbP,EAAIS,CAAA,CAWJ,CAGMC,OAAAA,EAAAA,QAAAA,UAAQ,IAAM,CACPJ,GACI,EAAA,CAAA,CAAA,EACPK,EAAA,cAAAf,EAAA,SAAA,KAAAgB,GAAA,CACG,OAAAA,EAAA,WACE,UACF,OAAAD,EAAA,cAAAE,EAAA,KAAAC,CAAA,MAEU,WAAmB,qBAE5B,OAAAH,EAAA,sBACS,KAAAnB,EAAU,QAEK,GACZ,MAAQF,EAAC,KAAA,EACCqB,EAAA,cAAA5B,EAAA,KAAA4B,EAAA,cAAA,MAAA,CAAA,UAME,iBAAA,EACb,MAEP,QAmBDd,CAAA,EAAAA,EAAA,IAAAkB,GAAcJ,EAAA,cAAAK,EAAA,CAAU,UAAc,iBAAe,EACjDD,EAAA,IAET,CAEG,MAAgBJ,EAAA,cAAA1B,EAAA,CAAY,KAAS,UACrC,QAAU,IAAAkB,EAAA,EAAA,CACT,EAAAZ,EAAA,UAAkBoB,EAAA,cAAAxB,EAAA,CAClB,MAAAI,EAAkB,WAChB,UACO,KAAA,IAAA,CAAA,MACF0B,EAAA,CAAA,IACKb,EAAe,IAAGW,IAAgBE,OACpCxB,EAAA,MAAasB,EAAGtB,SAAasB,EAAA,EAAA,EACrCG,EAAAC,EAAA,GACDJ,GADC,CAIF,OAA0B,QAAAA,EAAAtB,EAAA,SAAAsB,EAAA,KACjB,GAAAtB,EAAA,MAAAsB,EAAAtB,EAAA,OAAAsB,EAAA,EAAA,GAGT,EAGDrB,EAAA,KAAA,eAAA,CACA,CAAAF,GAAeyB,CAAgB,CAC7B,IAAmBT,CAAA,EAAAR,EAAAiB,CAAA,EAAAd,EAAA,EAAA,CACT,EACV,SAAW,IAAAA,EAAA,EAAA,CAAA,EACAQ,EAAA,cAAAS,EAAA,CACZ,IAAA3B,EAAA,IACM,UAAKS,EACA,OAAAT,EAAA,OACF,QAAAA,EAAA,YACD,aAAc,CAAA4B,EAAAb,IAAA,CAChBa,EAAA,IAAA,CAAAC,EAAAC,IAAA,CACF1B,EAAC,IAAA2B,GAAA,CACFF,IAAAE,EAAA,KACDhB,EAAAe,GAAqBC,EAGvB,CACO,CAAA,CACO,EAIlBnB,EAAAG,CAAA,CAGF,EAAA,OAAA,OAGR,aAAAM,CAEJ,CAAA,CAAA,CAAA,EAGA,CAAsB,CAAA,EAEtB,IAAUW,GAAAC,EAAA,CAAA"}
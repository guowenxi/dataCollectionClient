{"version":3,"file":"uploadImage.bfd1ce25.js","sources":["../src/components/TableInfo/fieldFile/uploadImage.tsx"],"sourcesContent":["import React, {useState, useEffect, useContext, useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport {connect} from \"dva\";\nimport {Upload as AUpload, Modal, message} from 'antd';\nimport type {Iconf} from '../TableInfo';\nimport {wrapContext} from '../TableInfo';\nimport {Form} from 'antd';\nimport {G} from '@/global';\n\nconst {rootUrl, rbacToken} = G;\nconst MUpload = styled(AUpload)<{ disabled?: boolean }>`\n  .ant-upload-select-picture-card {\n    display: ${(props) => (props.disabled ? 'none' : 'table')};\n  }\n`;\nconst WrapBox = styled.div`\n  && {\n    height: 100%;\n    padding: 1vh;\n    border: 1px solid #d9d9d9;\n  }\n`;\n\ninterface IconfInput extends Iconf {\n  placeholder?: string;\n  maxFileNum: number | string;\n  uploadUrl: string;\n}\n\ninterface Iinput {\n  dispatch?: any;\n  conf: IconfInput;\n  name: string;\n  rules: any;\n}\n\nconst Input: React.FC<Iinput> = (props) => {\n  const _: any = props.conf;\n  const {name} = props;\n  const [FILELIST, setFILELIST] = useState<any>([]);\n  const [PROPS, setPROPS] = useState({});\n  const [MODALSTATE, setMODALSTATE] = useState(false);\n  const [PREVIEW, setPREVIEW] = useState<any>('');\n  const theme: any = useContext(wrapContext);\n  const filterData = function (data: any) {\n    let _data: any = [];\n    switch (typeof data) {\n      case 'string':\n        _data == '' ? (_data = []) : (_data = data.split(','));\n        break;\n      case 'object':\n        _data = data;\n        break;\n      default:\n        _data = [];\n        break;\n    }\n    if(_data === null){\n      return [];\n    }\n    if (_data.length > 0) {\n      return _data.map(function (item: any) {\n        return {\n          ...item,\n          uid: item.fileId ? item.fileId : item,\n          fileId: item.fileId ? item.fileId : '',\n          name: item.fileName ? item.fileName : '',\n          status: 'done',\n          fileType: item.contentType ? item.contentType : '',\n          url: `${rootUrl}/fyHome/file/download?id=${item.fileId ? item.fileId : item}&rbacToken=${rbacToken}`,\n        }\n      });\n    }\n    return _data;\n  };\n\n  function getBase64(file: any) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n  }\n\n  useMemo(() => {\n    const formData = theme.form.getFieldValue(name);\n    // 暂时因为数据会回显 导致这个获取到的data是文件的data, 所以暂时这样做判断\n    const data = filterData(formData);\n    setFILELIST(data);\n    setPROPS({\n      name: 'file',\n      action: rootUrl + _.uploadUrl,\n      listType: 'picture-card',\n      headers: {\n        // authorization: 'authorization-text',\n      },\n      data: {\n        rbacToken: rbacToken\n      },\n      beforeUpload: file => {\n        const isPNG = file.type === \"image/jpeg\" || file.type === \"image/jpg\" || file.type === \"image/png\";\n        if (!isPNG) {\n          message.warning(`只能上传jpg/png格式的图片`);\n        }\n        return isPNG || AUpload.LIST_IGNORE;\n      },\n      onRemove() {\n      },\n      onChange(info: any) {\n        const files: any = info.fileList;\n        let arr: any[] = [];\n        if (info.file.status !== 'uploading') {\n          // console.log(info.file, info.fileList);\n        }\n        if (info.file.status === 'done' || info.file.status === 'removed') {\n\n          console.log(info.fileList)\n          info.fileList.map(item => {\n            arr.push({\n              fileName: item.fileName ? item.fileName : item.response.data.fileName,\n              fileId: item.fileId ? item.fileId : item.response.data.fileId,\n              fileUrl: item.fileUrl ? item.fileUrl : item.response.data.fileUrl\n            });\n          })\n\n          theme.form.setFieldsValue({\n            [name]: arr,\n          });\n\n        } else if (info.file.status === 'error') {\n          // message.error(`${info.file.name} file upload failed.`);\n        }\n        setFILELIST([...files]);\n\n      },\n      progress: {\n        strokeColor: {\n          '0%': '#108ee9',\n          '100%': '#87d068',\n        },\n        strokeWidth: 3,\n        format: (percent: any) => `${parseFloat(percent.toFixed(2))}%`,\n      },\n    });\n  }, []);\n\n  return (\n    <wrapContext.Consumer>\n      {(_data: any): any => {\n        return (\n          <Form.Item name={name} rules={props.rules}>\n            <WrapBox>\n              <MUpload\n                listType=\"picture\"\n                {...PROPS}\n                fileList={FILELIST}\n                disabled={_data.state === 'disabled'}\n                accept=\"image/*\"\n                maxCount={_.maxCount}\n                onPreview={async (file: any) => {\n                  setMODALSTATE(true);\n                  file.originFileObj\n                    ? setPREVIEW(await getBase64(file.originFileObj))\n                    : setPREVIEW(file.url);\n                }}\n              >\n                {FILELIST.length >= _.maxCount ? null : \"上传图片\"}\n\n                {/*{FILELIST.length < _.maxFileNum && '上传图片'}*/}\n              </MUpload>\n              <Modal\n                visible={MODALSTATE}\n                title={null}\n                footer={null}\n                onCancel={() => setMODALSTATE(false)}\n              >\n                <img alt=\"example\" style={{width: '100%'}} src={PREVIEW}/>\n              </Modal>\n            </WrapBox>\n          </Form.Item>\n        );\n      }}\n    </wrapContext.Consumer>\n  );\n};\nexport default connect(({}) => ({}))(Input);\n"],"names":["rootUrl","rbacToken","G","MUpload","styled","AUpload","props","WrapBox","Input","_","name","FILELIST","setFILELIST","useState","setPROPS","MODALSTATE","setMODALSTATE","PREVIEW","setPREVIEW","theme","useContext","wrapContext","filterData","data","_data","item","__spreadProps","__spreadValues","getBase64","file","resolve","reject","reader","error","useMemo","formData","isPNG","message","info","arr","files","percent","React","Form","PROPS","__async","Modal"],"mappings":"mxCAUA,KAAM,CACA,QAAAA,EAAwB,UAAAC,CAAA,EAAAC,EAEuBC,EAAAC,EAAAC,CAAA;AAAA;AAAA,kBAG9BC,EAAA,SAAA,OAAA;AAAA;AAAA,EAAAC,EAAAH,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwBrBI,EAAiBF,GAAA,CACjB,MAAMG,EAAQH,EAAA,KACR,CACN,KAAAI,CACM,EAAAJ,EACA,CAAAK,EAAAC,CAAuB,EAAWC,EAAA,QAAA,SAAA,CAAA,CAAA,EAClC,GAAaC,CAAC,EAAAD,EAAA,QAAA,SAAA,CAAA,CAAA,EAClB,CAAAE,EAAeC,CAAA,EAAAH,EAAA,QAAA,SAAA,EAAA,EACR,CAAAI,EAAAC,CAAA,EAAAL,EAAA,QAAA,SAAA,EAAA,EACHM,EAAAC,qBAAuBC,CAAe,EACtCC,EAAA,SAAAC,EAAA,CACG,IAAAC,EAAA,CAAA,EACK,OAAA,OAAAD,OACR,SAAAC,GAAA,GAAAA,EAAA,CAAA,EAAAA,EAAAD,EAAA,MAAA,GAAA,EAEA,UACA,SAAAC,EAAAD,EAED,cAEHC,EAAA,CAAA,EACI,MAEO,OAAAA,IAAA,KACF,GAC8BA,EACzB,OAAK,EACPA,EAAA,IAAgB,SAAAC,EAAgB,CAAA,OAC9BC,EAAAC,EAAA,GACEF,GADF,CAER,IAAKA,EAAG,OAAAA,EAAA,OAAAA,EACV,OAAAA,EAAA,OAAAA,EAAA,OAAA,GACD,KAAAA,EAAA,SAAAA,EAAA,SAAA,GACH,OAAA,OACO,SAAAA,EAAA,YAAAA,EAAA,YAAA,GACT,IAAA,GAAAzB,6BAAAyB,EAAA,OAAAA,EAAA,OAAAA,eAAAxB,GAEA,EACE,CAAA,EAEEuB,CACA,EACA,SAAAI,EAAiBC,EAAW,CAC9B,OAAC,IAAA,QAAA,CAAAC,EAAAC,IAAA,CACH,MAAAC,EAAA,IAAA,WAEAA,EAAc,cAAAH,CAAA,EACZG,EAAiB,OAAA,IAAWF,EAAAE,EAAA,MAAkB,EAExCA,EAAA,WAA0BD,EAAAE,CAAA,CAChC,CAAA,CACS,CAAAC,OAAAA,EAAAA,QAAAA,QACD,IAAA,CACN,MAAAC,IAAoB,KAAA,cAAAzB,CAAA,EACVa,EAAAD,EAAAa,CAAA,EAAAvB,EAGVW,CAAA,EAAAT,EACM,CACJ,KAAA,OACF,OAAAd,EAAAS,EAAA,UACA,wBACQ,QAAA,CAAA,EACN,KAAI,CACF,UAAAR,CACF,EACA,gBAAwB,CAC1B,MAAAmC,EAAAP,EAAA,OAAA,cAAAA,EAAA,OAAA,aAAAA,EAAA,OAAA,YACW,OAAAO,GACXC,EAAA,QAAA,+DAAA,KAE0BhC,EAAA,WACxB,EACI,UAAK,CAAK,EAEd,SAAAiC,EAAA,CACA,QAAcA,EAAA,SAEJ,IAAAC,EAAA,CAAA,EACHD,EAAA,KAAA,OACHA,EAAS,KAAA,SAAA,QAAAA,EAAA,KAAA,SAAA,WAAA,cACQ,QAAA,EAA8CA,WAChD,IAAAb,GAAS,CAAiCc,QAExD,SAAAd,EAAA,SAAAA,EAAA,SAAAA,EAAA,SAAA,KAAA,SACF,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,SAAA,KAAA,OAED,QAA0BA,EAAA,QAAAA,EAAA,QAAAA,EAAA,SAAA,KAAA,OAAA,CACvB,CAAO,CACT,EAEQN,EAAA,KAAA,eAAU,CAErB,CAAAT,GAAA6B,CACA,CAAY,GAEdD,EAAA,KAAA,OACU1B,EAAA,CAAA,GAAA4B,CAAA,CAAA,CAAA,EACK,SACL,CAAA,YACE,CACV,KAAA,UACa,OAAA,SACb,EACF,YAAA,EACD,OAAAC,GAAA,GAAA,WAAAA,EAAA,QAAA,CAAA,CAAA,IACE,CAEL,CAAA,CAIQ,EAAA,CAAA,CAAA,EAAWC,EAAA,cAAArB,EAAA,SAAA,KAAAG,GAAyBkB,EAAA,cAAAC,EAAA,KAAA,CAClC,KAAAjC,EAEI,MAASJ,EAAA,KAAA,EACLoC,EAAA,cAAAnC,EAAA,KAAAmC,EAAA,cAAAvC,EAAAuB,EAAAC,EAAA,CACJ,SAAU,WACViB,GAFI,CAGJ,SAAOjC,EACP,SAAUa,EAAE,QAAA,WACZ,OAAA,UACE,SAAAf,EAAA,SACK,UAAAoB,GACUgB,EAAA,wBAEjB7B,EAAA,EAAA,oBAEwC,MAAAY,EAAAC,EAAA,cAI1C,EAACX,EAAAW,EAAA,GAAA,CACU,EAAA,GACFlB,EAAA,QAAAF,EAAA,SAAA,KAAA,0BAAA,EAAAiC,EAAA,cAAAI,EAAA,CACP,QAAQ/B,EACR,MAAA,KAAmC,OAElC,KAAI,SAAI,IAAAC,EAAA,EAAA,CAAA,EAAyB0B,EAAM,cAAA,MAAA,CAAG,IAAK,UAClD,MAEJ,CAGN,MAAA,MAEJ,EACA,IAAAzB"}
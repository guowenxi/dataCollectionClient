{"version":3,"file":"index.5a655831.js","sources":["../src/pages/jurisdictionManage/columns.tsx","../src/pages/jurisdictionManage/index.tsx"],"sourcesContent":["import React from \"react\";\n\nimport {Badge, Input, Switch, Tag} from \"antd\";\n\nconst columns = {\n    \"url\": \"/data-acquisition/role-info\",\n    \"params\": {},\n    \"checkBox\": true,\n    \"operation\": [\n        {\"name\": \"查看用户\", \"type\": \"disabled\", \"drawerWidth\": \"50\"},\n        {\"name\": \"编辑\", \"type\": \"disabled\", \"drawerWidth\": \"50\"},\n        {\"name\": \"删除\", \"type\": \"disabled\", \"drawerWidth\": \"50\"},\n    ],\n    \"userOperation\": [\n        {\"name\": \"编辑\", \"type\": \"disabled\", \"drawerWidth\": \"50\"},\n        {\"name\": \"删除\", \"type\": \"disabled\", \"drawerWidth\": \"50\"},\n    ],\n    \"searchListType\": \"multipleQuery\",\n    \"searchList\": [\n        {\"title\": \"关键字\", \"type\": \"input\", \"key\": \"name\", \"placeholder\": \"请输入\"},\n    ],\n    \"tableColumns\": (props: any, tableProps: any, sorter: any) => {\n        let current: number = tableProps.pagination.current;\n        let pageSize: number = tableProps.pagination.pageSize;\n        return [\n            {\n                title: '角色名称',\n                key: 'roleName',\n                dataIndex: 'roleName',\n                width: \"10%\",\n                align: 'center',\n            },\n\n            {\n                title: '实际成员',\n                width: \"10%\",\n                align: 'center',\n                render: (text: any, record: any, index: any) => {\n                    return record.userInfo.length + \"人\"\n                },\n            },\n\n\n            {\n                title: '页面权限',\n                width: \"10%\",\n                align: 'center',\n                render: (text: any, record: any, index: any) => {\n                    return record.pageAuthority.typeName\n                },\n            },\n\n\n            {\n                title: '操作权限',\n                width: \"10%\",\n                align: 'center',\n                render: (text: any, record: any, index: any) => {\n                    return record.operationAuthority.typeName\n                },\n            },\n\n\n            {\n                title: '角色权限',\n                key: 'jurisdictionDeadline',\n                dataIndex: 'jurisdictionDeadline',\n                width: \"10%\",\n                align: 'center',\n            },\n\n            // {\n            //     title: '停用/启用',\n            //     key: 'category',\n            //     dataIndex: 'category',\n            //     width: \"10%\",\n            //     align: 'center',\n            //     render: (text: any, record: any, index: any) => {\n            //         return <Switch checkedChildren=\"开启\" unCheckedChildren=\"停用\"\n            //                        defaultChecked={record.status===1?true:false}/>\n            //     },\n            // },\n        ];\n    },\n    \"userTableColumns\": [\n        {\n            title: '用户名',\n            key: 'username',\n            dataIndex: 'username',\n            width: \"8%\",\n            align: 'center',\n        },\n        {\n            title: '手机号',\n            key: 'phone',\n            dataIndex: 'phone',\n            width: \"10%\",\n            align: 'center',\n        },\n        {\n            title: '密码',\n            key: 'password',\n            dataIndex: 'password',\n            width: \"8%\",\n            align: 'center',\n            render: (text: any, record: any, index: any) => {\n                return <Input.Password bordered={false} value={text} placeholder=\"input password\"/>\n            }\n        },\n    ]\n}\nexport default columns\n","import React, {useEffect, useState} from \"react\";\nimport {connect} from \"dva\";\nimport {PaginatedParams} from \"ahooks/lib/useAntdTable/\";\nimport {useAntdTable} from \"ahooks\";\nimport {\n    Table,\n    Button,\n    Drawer,\n    Modal,\n    Form,\n    DatePicker,\n    Space,\n    Input,\n    Switch,\n    Tree,\n    message,\n    Select,\n    Radio,\n    Upload\n} from \"antd\";\n\nconst {TextArea} = Input;\nconst {Search} = Input;\nconst {Option} = Select;\nconst {Column} = Table;\nimport moment from \"moment\";\n\nimport columns from './columns';\nimport TABLEJSON from './TABLEJSON.tsx';\nimport listData from './data.ts';\nimport TableInfo from '@/components/TableInfo/TableInfo';\nimport SearchMore from \"@/components/SearchMore/SearchMore\";\nimport styles from \"./style.module.less\";\nimport {DeleteOutlined, EditOutlined, FallOutlined, PlusCircleOutlined, RiseOutlined} from \"@ant-design/icons\";\nimport defaultShebei from \"@/assets/default-shebei.png\";\nimport kai from \"@/assets/kai.png\";\nimport guan from \"@/assets/guan.png\";\n\nconst Test = (props: any) => {\n    const {dispatch, select} = props;\n    const [form] = Form.useForm();\n\n    const [DETAIL, setDETAIL] = useState({}); /* 表格详情 */\n\n    const [SELECTROWKEYS, setSELECTROWKEYS] = useState([]);  /* 选中项  */\n\n\n    const [menuList, setMenuList] = useState([]);\n\n    const [formTitleRole, setFormTitleRole] = useState<string>('');//弹框标题\n    const [formIsModalVisibleRole, setFormlIsModalVisibleRole] = useState(false);//弹框状态，是否显示\n    const [formDataRole, setFormDataRole] = useState<any>({});//弹框表单信息\n\n\n    const [listRole, setListRole] = useState([]);  /* 选中项  */\n    const [formTitleUser, setFormTitleUser] = useState<string>('');//弹框标题\n    const [formIsModalVisibleUser, setFormlIsModalVisibleUser] = useState(false);//弹框状态，是否显示\n    const [formDataUser, setFormDataUser] = useState<any>({});//弹框表单信息\n\n\n    const [userList, setUserList] = useState([]);\n    const [drawerTitle, setDrawerTitle] = useState<string>('');//弹框标题\n    const [visible, setVisible] = useState(false);\n\n    // 获取对应的TABLEJSON\n    const getTABLEJSON = (idx: number) => {\n        return TABLEJSON(DETAIL)[idx];\n    };\n\n    // 列表加载数据的方法\n    //---------------\n    const getTableData = (\n        {current, pageSize}: PaginatedParams[0],\n        formData: Object,\n    ): Promise<any> => {\n        return new Promise((resolve) => {\n            dispatch({\n                type: 'common/getRequestData',\n                method: 'GET',\n                url: columns.url,\n                payload: {\n                    pageNo: current,\n                    pageSize,\n                    'rbacToken': '7ed6a62261854a4eb27d844ff4df1885',\n                    ...formData\n                },\n                callback: (res: any) => {\n                    if (res.success) {\n                        let list = res.data.list;\n                        let total = res.data.total;\n                        resolve({\n                            list: list,\n                            total: total,\n                        });\n                    }\n                },\n            });\n        });\n    };\n\n    const {tableProps, search} = useAntdTable(getTableData, {\n        defaultPageSize: 10,\n        form\n    });\n    const {submit, reset} = search;\n\n    const selectRole = () => {\n        dispatch({\n            type: 'common/getRequestData',\n            method: 'GET',\n            url: \"/data-acquisition/role-info/list\",\n            payload: {},\n            callback: (res: any) => {\n                if (res.success) {\n                    setListRole(res.data)\n                }\n            },\n        });\n    }\n    const selectMenu = () => {\n        return new Promise((resolve) => {\n            dispatch({\n                type: 'common/getRequestData',\n                method: 'GET',\n                url: \"/data-acquisition/menu-info\",\n                payload: {},\n                callback: (res: any) => {\n                    if (res.success) {\n                        const data = res.data[0];\n                        const menuJson = JSON.parse(data.menuJson);\n                        dealTreeData(menuJson, 0, []);\n                        resolve(menuJson);\n                    }\n                },\n            });\n        });\n\n    }\n\n    const dealTreeData = (_list: any, idx: number, idList: Array) => {\n        if (Array.isArray(_list)) {\n            _list.map((item: object, index: number) => {\n                item.key = item.id;\n                item.value = item.id;\n                item.title = item.displayName;\n                if (idx === 0 && idx + index === 0) {\n                    idList.push(item.id)\n                }\n                if (Array.isArray(item.children) && item.children.length) {\n                    dealTreeData(item.children, idx + index, idList)\n                } else {\n                    if (idx === 0 && idx + index === 0) {\n                        // detailClick(item);//默认选中事项\n                    }\n                }\n            })\n        }\n    }\n\n\n    /* 角色 添加  */\n    const addRole = async () => {\n        let _data = await selectMenu();\n        setMenuList(_data)\n\n        setFormDataRole({})\n        setFormTitleRole(\"新增角色\");\n        setFormlIsModalVisibleRole(true);\n    }\n    /* 角色 编辑  */\n    const editRole = async (id) => {\n\n        let _data = await selectMenu();\n        setMenuList(_data)\n\n        dispatch({\n            type: 'common/getRequestData',\n            method: 'GET',\n            url: \"/data-acquisition/role-info/\" + id,\n            payload: {},\n            callback: (res: any) => {\n                if (res.success) {\n                    const data = res.data;\n                    setFormDataRole(\n                        {\n                            ...data,\n                            pageAuthority: JSON.parse(data.pageAuthority),\n                            \"jurisdictionDeadline\": data.jurisdictionDeadline ? moment(data.jurisdictionDeadline, 'YYYY-MM-DD HH:mm:SS') : \"\",\n                        }\n                    )\n                    setFormTitleRole(\"编辑角色\");\n                    setFormlIsModalVisibleRole(true);\n                }\n            },\n        });\n    }\n\n\n    /* 角色 删除 */\n    const deleteRole = (id) => {\n        Modal.confirm({\n            title: '删除',\n            icon: '',\n            content: '确定要删除当前角色吗',\n            onOk() {\n                dispatch({\n                    type: 'common/getRequestData',\n                    method: 'delete',\n                    url: \"/data-acquisition/role-info/\" + id,\n                    payload: {},\n                    callback: (res: any) => {\n                        if (res.success) {\n                            reset()\n                        }\n                    },\n                });\n\n            },\n            onCancel() {\n                console.log('Cancel');\n            },\n        });\n    }\n    /* 批量角色 删除 */\n    const deleteRoleBatch = () => {\n        console.log(SELECTROWKEYS)\n        Modal.confirm({\n            title: '删除',\n            icon: '',\n            content: '确定要删除当前选中的角色吗',\n            onOk() {\n                dispatch({\n                    type: 'common/getRequestData',\n                    method: 'post',\n                    url: \"/data-acquisition/role-info/removeBatch\",\n                    payload: {\n                        ids: SELECTROWKEYS\n                    },\n                    callback: (res: any) => {\n                        if (res.success) {\n                            reset()\n                        }\n                    },\n                });\n\n            },\n            onCancel() {\n                console.log('Cancel');\n            },\n        });\n    }\n\n\n    const addOrUpdateRole = () => {\n        let _url = \"\"\n        let _data = {}\n        if (formDataRole.id) {\n            _url = '/data-acquisition/role-info/update'\n            _data = {\n                ...formDataRole,\n                jurisdictionDeadline: formDataRole.jurisdictionDeadline === null ? '' : formDataRole.jurisdictionDeadline.format(\"YYYY-MM-DD HH:mm:SS\")\n            }\n        } else {\n            _url = '/data-acquisition/role-info/create'\n            _data = {\n                ...formDataRole,\n                jurisdictionDeadline: formDataRole.jurisdictionDeadline === null ? '' : formDataRole.jurisdictionDeadline.format(\"YYYY-MM-DD HH:mm:SS\"),\n            }\n        }\n        dispatch({\n            type: 'common/getRequestData',\n            method: 'post',\n            url: _url,\n            payload: {\n                ..._data\n            },\n            callback: (res: any) => {\n                console.log(res)\n                if (res.success) {\n                    setFormlIsModalVisibleRole(false);\n                    reset()\n                }\n            },\n        });\n    }\n    const treeData = [\n        {\n            title: 'parent 1',\n            key: '0-0',\n            children: [\n                {\n                    title: 'parent 1-0',\n                    key: '0-0-0',\n                    disabled: true,\n                    children: [\n                        {\n                            title: 'leaf',\n                            key: '0-0-0-0',\n                            disableCheckbox: true,\n                        },\n                        {\n                            title: 'leaf',\n                            key: '0-0-0-1',\n                        },\n                    ],\n                },\n                {\n                    title: 'parent 1-1',\n                    key: '0-0-1',\n                    children: [{title: <span style={{color: '#1890ff'}}>sss</span>, key: '0-0-1-0'}],\n                },\n            ],\n        },\n    ];\n\n    const onSelect = (selectedKeys, info) => {\n        console.log('selected', selectedKeys, info)\n    };\n\n    const onCheck = (checkedKeys, info) => {\n        console.log('onCheck', checkedKeys, info);\n        setFormDataRole({\n            ...formDataRole,\n            pageAuthority: checkedKeys ? JSON.stringify(checkedKeys) : ''\n        });\n    };\n\n\n    /* 用户 查询  */\n    const getUsers = (item) => {\n        setFormDataRole(item)\n        dispatch({\n            type: 'common/getRequestData',\n            method: 'GET',\n            url: \"/data-acquisition/user-info/findByRoleId?roleId=\" + item.id,\n            payload: {},\n            callback: (res: any) => {\n                if (res.success) {\n                    const data = res.data;\n                    console.log(data)\n                    setVisible(true)\n                    setDrawerTitle(\"用户成员\");\n                    setUserList(data)\n                }\n            },\n        });\n    }\n    /* 用户 添加  */\n    const addUser = () => {\n        selectRole()\n        setFormDataUser({})\n        setFormTitleUser(\"新增用户\");\n        setFormlIsModalVisibleUser(true);\n    }\n    /* 用户 编辑  */\n    const editUser = (item) => {\n        selectRole()\n        setFormDataUser({...item})\n        setFormTitleUser(\"编辑用户\");\n        setFormlIsModalVisibleUser(true);\n    }\n    /* 用户 删除 */\n    const deleteUser = (id) => {\n        Modal.confirm({\n            title: '删除',\n            icon: '',\n            content: '确定要删除当前角色吗',\n            onOk() {\n                dispatch({\n                    type: 'common/getRequestData',\n                    method: 'delete',\n                    url: \"/data-acquisition/user-info/\" + id,\n                    payload: {},\n                    callback: (res: any) => {\n                        if (res.success) {\n                            setFormlIsModalVisibleUser(false);\n                            getUsers(formDataRole)\n                        }\n                    },\n                });\n\n            },\n            onCancel() {\n                console.log('Cancel');\n            },\n        });\n    }\n    // 添加用户\n    const addOrUpdateUser = () => {\n        let _url = \"\"\n        let _data = {}\n        if (formDataUser.id) {\n            _url = '/data-acquisition/user-info/update'\n            _data = {\n                ...formDataUser,\n            }\n        } else {\n            _url = '/data-acquisition/user-info/create'\n            _data = {\n                ...formDataUser,\n            }\n        }\n\n        dispatch({\n            type: 'common/getRequestData',\n            method: 'post',\n            url: _url,\n            payload: {\n                ..._data,\n            },\n            callback: (res: any) => {\n                console.log(res)\n                if (res.success) {\n                    setFormlIsModalVisibleUser(false);\n                    getUsers(formDataRole)\n                }\n            },\n        });\n    }\n\n\n    return (<div className={styles['jurisdictionManage']}>\n        <div className={styles['search']}>\n            <div className={styles['left']}>\n                <Button onClick={() => {\n                    addRole()\n                }} type=\"primary\" icon={<PlusCircleOutlined/>}>新增角色</Button>\n                <Button onClick={() => {\n                    addUser()\n                }} type=\"primary\" icon={<PlusCircleOutlined/>}>新增用户</Button>\n                <Button onClick={() => {\n                    deleteRoleBatch()\n                }} type=\"primary\" icon={<DeleteOutlined/>} danger>批量删除</Button>\n            </div>\n            <div className={styles['right']}>\n\n            </div>\n        </div>\n\n        <Table\n            rowKey=\"id\"\n            scroll={{x: 1000}}\n            {...tableProps}\n            rowSelection={\n                columns.checkBox\n                    ? {\n                        type: 'checkbox',\n                        columnWidth: '5%',\n                        selectedRowKeys: SELECTROWKEYS,\n                        onChange: (selectedRowKeys: any) => {\n                            setSELECTROWKEYS(selectedRowKeys);\n                        }\n                    }\n                    : undefined\n            }\n        >\n            {columns.tableColumns\n                ? columns.tableColumns(props, tableProps).map((i: any, idx: number) => {\n                    return (\n                        <Column\n                            key={idx}\n                            {...i}\n                            onCell={(): any => ({width: i.width})}\n                            onHeaderCell={(): any => ({width: i.width})}\n                        ></Column>\n                    );\n                })\n                : null}\n            <Column\n                width={\"10%\"}\n                align='center'\n                title=\"停用/启用\"\n                render={(text: any, record: any, index: any) => {\n                    return <Switch checkedChildren=\"开启\" unCheckedChildren=\"停用\"\n                                   defaultChecked={record.status === 1 ? true : false}\n                                   onChange={(e) => {\n                                       console.log(e)\n                                       setFormDataRole({...formDataRole, status: e ? 1 : 0})\n                                       addOrUpdateRole();\n                                   }}\n                    />\n                }}\n            />\n\n            {columns.operation && !!columns.operation.length ? (\n                <Column\n                    title=\"操作\"\n                    width={'10%'}\n                    align=\"center\"\n                    fixed='right'\n                    render={(text: any, record: any) => {\n                        return (\n                            <Space>\n                                {!!columns.operation.length &&\n                                columns.operation.map((item: any, idx: number) => {\n                                    return (\n                                        <a\n                                            key={idx}\n                                            onClick={() => {\n                                                setDETAIL(record)\n\n                                                if (item.name === \"查看用户\") {\n                                                    getUsers(record);\n                                                }\n                                                if (item.name === \"编辑\") {\n                                                    editRole(record.id);\n                                                }\n                                                if (item.name === \"删除\") {\n                                                    deleteRole(record.id);\n                                                }\n                                            }}\n                                        >\n                                            {item.name}\n                                        </a>\n                                    );\n                                })}\n                            </Space>\n                        );\n                    }}\n                ></Column>\n            ) : null}\n        </Table>\n\n        {/* 新增用户*/}\n        <Modal title={formTitleUser} visible={formIsModalVisibleUser} onOk={() => {\n            addOrUpdateUser()\n        }} onCancel={() => {\n            setFormlIsModalVisibleUser(false);\n        }} width={600} style={{borderRadius: '5%'}}>\n            <Form\n                layout=\"vertical\"\n            >\n\n                <div className={styles['m-box']}>\n                    <div className={styles['mb-row2']}>\n                        <div className={styles['mbr-left']}>\n                            <Form.Item required={true} label={`用户姓名`}>\n                                <Input value={formDataUser.username}\n                                       onChange={(val) => {\n                                           setFormDataUser({\n                                               ...formDataUser,\n                                               username: val.target ? val.target.value : val\n                                           });\n                                       }}\n                                       placeholder=\"请输入用户姓名\"/>\n                            </Form.Item>\n                        </div>\n                        <div className={styles['mbr-right']}>\n                            <Form.Item required={true} label={`所属角色`}>\n\n                                <Select\n                                    value={formDataUser.roleId}\n                                    onChange={(val: any) => {\n                                        setFormDataUser({\n                                            ...formDataUser,\n                                            roleId: val.target ? val.target.value : val\n                                        });\n                                    }}\n                                    style={{width: '100%'}}\n                                    placeholder=\"请选择所属角色\"\n                                >\n                                    {\n                                        listRole.map((item) => {\n                                            return <Option key={item.id}\n                                                           value={item.id}>{item.roleName}</Option>\n                                        })\n                                    }\n\n                                </Select>\n\n                            </Form.Item>\n                        </div>\n                    </div>\n                    <div className={styles['mb-row2']}>\n                        <div className={styles['mbr-left']}>\n                            <Form.Item required={true} label={`手机号码`}>\n                                <Input value={formDataUser.phone}\n                                       onChange={(val) => {\n                                           setFormDataUser({\n                                               ...formDataUser,\n                                               phone: val.target ? val.target.value : val\n                                           });\n                                       }}\n                                       placeholder=\"请输入手机号码\"/>\n                            </Form.Item>\n                        </div>\n                        <div className={styles['mbr-right']}>\n                            <Form.Item required={true} label={`用户密码`}>\n\n                                <Input.Password value={formDataUser.password}\n                                                onChange={(val) => {\n                                                    setFormDataUser({\n                                                        ...formDataUser,\n                                                        password: val.target ? val.target.value : val\n                                                    });\n                                                }}\n                                                placeholder=\"请输入用户密码\"/>\n\n                            </Form.Item>\n                        </div>\n                    </div>\n                    <div style={{color: \"red\"}}>规则：密码必须由大写字母，小写字母，数字，特殊字符组成,且长度大于8位</div>\n                </div>\n            </Form>\n        </Modal>\n\n\n        {/* 新增编辑 角色*/}\n        <Modal title={formTitleRole} visible={formIsModalVisibleRole} onOk={() => {\n            addOrUpdateRole()\n        }} onCancel={() => {\n            setFormlIsModalVisibleRole(false);\n        }} width={800} style={{borderRadius: '5%'}}>\n            <Form\n                layout=\"vertical\"\n            >\n\n                <div style={{display: \"flex\"}}>\n                    <div style={{flex: 0.7, marginRight: \"20px\"}} className={styles['m-box']}>\n                        <div className={styles['mb-row1']}>\n                            <Form.Item required={true} label={`角色名称`}>\n                                <Input value={formDataRole.roleName}\n                                       onChange={(val) => {\n                                           setFormDataRole({\n                                               ...formDataRole,\n                                               roleName: val.target ? val.target.value : val\n                                           });\n                                       }}\n                                       placeholder=\"请输入角色名称\"/>\n                            </Form.Item>\n                        </div>\n                        <div className={styles['mb-row1']}>\n                            <Form.Item required={true} label={`操作权限`}>\n                                <Radio.Group value={formDataRole.operationAuthority}\n                                             onChange={(val: any) => {\n                                                 setFormDataRole({\n                                                     ...formDataRole,\n                                                     operationAuthority: val.target ? val.target.value : val\n                                                 });\n                                             }}>\n                                    {\n                                        select?.operation_authority?.map(item => {\n                                            return <Radio key={item.typeCode}\n                                                          value={item.typeCode}>{item.typeName}</Radio>\n                                        })\n                                    }\n\n                                </Radio.Group>\n                            </Form.Item>\n                        </div>\n                        <div className={styles['mb-row1']}>\n                            <Form.Item required={true} label={`权限期限`}>\n                                <DatePicker value={formDataRole.jurisdictionDeadline} showTime\n                                            onChange={(val: any) => {\n                                                setFormDataRole({\n                                                    ...formDataRole,\n                                                    jurisdictionDeadline: val.target ? val.target.value : val\n                                                });\n                                            }} style={{width: '100%'}}/>\n\n                            </Form.Item>\n                        </div>\n                    </div>\n                    <div style={{flex: 1}} className={styles['m-box']}>\n                        <div className={styles['mb-row1']}>\n                            <Form.Item required={true} label={`页面权限`}>\n                                <Tree\n                                    checkable\n                                    defaultExpandedKeys={formDataRole.pageAuthority}\n                                    defaultSelectedKeys={formDataRole.pageAuthority}\n                                    defaultCheckedKeys={formDataRole.pageAuthority}\n                                    onSelect={onSelect}\n                                    onCheck={onCheck}\n                                    treeData={menuList}\n                                />\n                            </Form.Item>\n                        </div>\n\n\n                    </div>\n                </div>\n\n            </Form>\n        </Modal>\n\n\n        {/* 查看用户 */}\n        <Drawer title={formDataRole.roleName + ' 下的用户'} placement=\"right\" onClose={() => {\n            setDETAIL({})\n\n            setVisible(false)\n        }} visible={visible} width={'60vw'} zIndex={2}>\n            <div className={styles['detail']}>\n                <Table rowKey={'channelId'} dataSource={userList} pagination={false}>\n\n                    {\n\n                        columns.userTableColumns.map(i => {\n                            return <Column {...i}></Column>\n                        })\n                    }\n                    <Column\n                        width={\"15%\"}\n                        title=\"所属角色\"\n                        align='center'\n                        render={(text: any, record: any, index: any) => {\n                            return formDataRole.roleName\n                        }}\n                    />\n\n                    <Column\n                        title=\"操作\"\n                        align='center'\n                        width='10%'\n                        key=\"action\"\n                        render={(_: any, record: any) => (\n                            <Space size=\"middle\">\n\n                                {\n                                    columns.userOperation.map(item => {\n                                        return <a onClick={() => {\n                                            if (item.name === \"编辑\") {\n                                                editUser(record);\n                                            }\n                                            if (item.name === \"删除\") {\n                                                deleteUser(record.id);\n                                            }\n\n                                        }}>{item.name}</a>\n                                    })\n                                }\n\n\n                            </Space>\n                        )}\n                    />\n\n                </Table>\n            </div>\n        </Drawer>\n    </div>);\n};\n\nexport default connect(({common, select}) => ({\n    common,\n    select\n}))(Test);\n"],"names":["columns","props","sorter","tableProps","text","record","index","React","Input","Option","Select","Column","Table","Test","dispatch","select","form","Form","DETAIL","setDETAIL","useState","SELECTROWKEYS","setSELECTROWKEYS","menuList","setMenuList","formTitleRole","setFormTitleRole","formIsModalVisibleRole","setFormlIsModalVisibleRole","formDataRole","setFormDataRole","listRole","setListRole","formTitleUser","setFormTitleUser","formIsModalVisibleUser","setFormlIsModalVisibleUser","formDataUser","setFormDataUser","userList","setUserList","drawerTitle","setDrawerTitle","visible","setVisible","getTableData","current","pageSize","formData","resolve","__spreadValues","res","list","total","search","useAntdTable","submit","reset","selectRole","selectMenu","data","menuJson","dealTreeData","idx","idList","_list","item","addRole","__async","_data","id","__spreadProps","moment","deleteRole","Modal","deleteRoleBatch","addOrUpdateRole","_url","onSelect","selectedKeys","info","onCheck","checkedKeys","getUsers","addUser","editUser","deleteUser","addOrUpdateUser","styles","Button","PlusCircleOutlined","DeleteOutlined","selectedRowKeys","i","Switch","e","Space","editRole","val","Radio","_a","DatePicker","Tree","Drawer"],"mappings":"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"}
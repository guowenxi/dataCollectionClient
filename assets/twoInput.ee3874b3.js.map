{"version":3,"file":"twoInput.ee3874b3.js","sources":["../src/components/TableInfo/fieldFile/twoInput.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\n\r\n\r\nimport {connect} from \"dva\";\r\nimport { InputNumber as AInputNumber, Select as ASelect } from 'antd';\r\nimport type { Iconf} from '../TableInfo';\r\nimport { wrapContext } from '../TableInfo';\r\nimport { Form } from 'antd';\r\nimport { ShowData } from './_css_comm';\r\nimport { PlusCircleOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport { Input as AInput } from 'antd';\r\n\r\nconst { Option } = ASelect;\r\n\r\nconst MInputNumber = styled(AInputNumber)`\r\n  .ant-input-number-input {\r\n    height: auto;\r\n    padding: 0 11px 0 0;\r\n  }\r\n  && {\r\n    width: 100%;\r\n    padding: 1vh;\r\n  }\r\n  // .contentItem_twoInput_main{\r\n  //   display:flex;\r\n  //   width:100%;\r\n  // }\r\n  // .contentItem_twoInput{\r\n  //   padding:0 1vw;\r\n  //   position:relative;\r\n  //   display: flex;\r\n  //   justify-content: center;\r\n  //   align-items: center;\r\n  // }\r\n`;\r\n\r\nconst MSelect = styled(ASelect)`\r\n  .ant-select-selector {\r\n    height: 100% !important;\r\n    padding: 0 11px 0 0;\r\n  }\r\n  && {\r\n    width: 100%;\r\n    /* padding: 1vh; */\r\n  }\r\n`;\r\n\r\ninterface IconfInputNumber extends Iconf {\r\n  min?: number;\r\n  max?: number;\r\n  defaultValue?: number;\r\n  decimalSeparator?: string;\r\n}\r\n\r\ninterface InputNumber {\r\n  dispatch?: any;\r\n  conf: IconfInputNumber;\r\n  name: string;\r\n  rules: any;\r\n}\r\n\r\nconst InputNumber: React.FC<InputNumber> = (props) => {\r\n  const [inputArr, setinputArr] = useState([{ name: '', num: '' }]);\r\n  const theme: any = useContext(wrapContext);\r\n\r\n  const [OPTION,setOPTION]=useState([]);\r\n\r\n  const _: any = props.conf;\r\n  const {name} = props;\r\n  useEffect(() => {\r\n    const list: any=theme.form.getFieldValue([name]) || inputArr;\r\n    setinputArr(list)\r\n  },[]);\r\n  return (\r\n    <wrapContext.Consumer>\r\n      {(_data): any => {\r\n        switch (_data.state) {\r\n          case 'default':\r\n            return <ShowData>{_.defaultValue || '　'}</ShowData>;\r\n            break;\r\n          case 'edit':\r\n          case 'new':\r\n          case 'disabled':\r\n            return (\r\n              <Form.Item\r\n                name={name}\r\n                // rules={props.rules}\r\n                rules={[\r\n                  () => ({\r\n                    validator(rule, value, callback) {\r\n                      if (props.rules[0].required) {\r\n                        for (let i = 0; i < value.length; i++) {\r\n                          if (value[i].name == '' || !value[i].num || value[i].num == '') {\r\n                            return Promise.reject(props.rules[0].message);\r\n                          }\r\n                        }\r\n                      }\r\n                      callback();\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                {inputArr.map((item: any, index: number) => (\r\n                  <div\r\n                    key={index}\r\n                    style={{ display: 'flex', border: '1px solid #d9d9d9', padding: '1vh 0' }}\r\n                    className=\"contentItem_twoInput_main\"\r\n                  >\r\n                    <div style={{ width: '100%' }}>\r\n                      <div style={{ display: 'flex' }}>\r\n                        <span\r\n                          style={{\r\n                            width: '7vw',\r\n                            textAlign: 'center',\r\n                            background: '#ebebeb',\r\n                            padding: '1vh 0',\r\n                          }}\r\n                        >\r\n                          车队关键字\r\n                        </span>\r\n                        <MSelect\r\n                          disabled={_data.state === 'disabled'}\r\n                          placeholder={_.placeholder}\r\n                          size={_.size}\r\n                          value={item.name}\r\n                          onChange={(value: any,data: any) => {\r\n                            item.name = data.title;\r\n                            item.id=value;\r\n                            setinputArr([...inputArr]);\r\n                            theme.form.setFieldsValue({ [name]: inputArr })\r\n                          }}\r\n                        >\r\n                          {_.options.map((item01: any, index01: number) => {\r\n                            return (\r\n                              <Option title={item01.name} value={item01.id} key={index01.toString()}>\r\n                                {item01.name}\r\n                              </Option>\r\n                            );\r\n                          })}\r\n                        </MSelect>\r\n                      </div>\r\n                      <div style={{ display: 'flex' }}>\r\n                        <span\r\n                          style={{\r\n                            width: '7vw',\r\n                            textAlign: 'center',\r\n                            background: '#ebebeb',\r\n                            padding: '1vh 0',\r\n                          }}\r\n                        >\r\n                          电子票数量\r\n                        </span>\r\n                        {\r\n                          _data.state === 'disabled'?<div style={{\r\n                            width:'100%',\r\n                            padding:'1vh 0',\r\n                            'border':'1px solid #d9d9d9',\r\n                            paddingLeft:'18px',\r\n                            color:'rgba(0, 0, 0, 0.25)'\r\n                          }}>{item.num}</div>  :<MInputNumber\r\n                          // style={_.style}\r\n                          // min={_.min ? _.min : 0}\r\n                          // max={_.max ? _.max : 9999}\r\n                          disabled={_data.state === 'disabled'}\r\n                          placeholder={_.placeholderTwo}\r\n                          size={_.size}\r\n                          value={item.num}\r\n                          onChange={(e) => {\r\n                            item.num = e;\r\n                            setinputArr([...inputArr]);\r\n                            theme.form.setFieldsValue({ [name]: inputArr })\r\n                          }}\r\n                        />\r\n                        }\r\n\r\n\r\n                      </div>\r\n                    </div>\r\n\r\n                   {\r\n                     _data.state === 'disabled'?null:<div\r\n                     style={{\r\n                       padding: '0 1vw',\r\n                       display: 'flex',\r\n                       justifyContent: 'center',\r\n                       alignItems: 'center',\r\n                     }}\r\n                     className=\"contentItem_twoInput\"\r\n                   >\r\n                     {inputArr.length == index + 1 ? (\r\n                       <PlusCircleOutlined\r\n                         onClick={() => {\r\n                           setinputArr(inputArr.concat([{ name: '', num: '' }]));\r\n                         }}\r\n                         style={{ fontSize: '30px', color: '#08c', cursor: 'pointer' }}\r\n                       />\r\n                     ) : (\r\n                       <MinusCircleOutlined\r\n                         onClick={() => {\r\n                           inputArr.splice(index, 1);\r\n                           setinputArr([...inputArr]);\r\n                         }}\r\n                         style={{ fontSize: '30px', color: '#08c', cursor: 'pointer' }}\r\n                       />\r\n                     )}\r\n                   </div>\r\n                   }\r\n\r\n\r\n                  </div>\r\n                ))}\r\n              </Form.Item>\r\n            );\r\n            break;\r\n        }\r\n      }}\r\n    </wrapContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default InputNumber;\r\n// export default connect(({  }: ConnectState) => ({\r\n\r\n// }))(Input);\r\n"],"names":["Option","ASelect","MInputNumber","styled","AInputNumber","MSelect","InputNumber","inputArr","setinputArr","useState","theme","wrapContext","_","props","name","useEffect","list","React","_data","ShowData","Form","rule","value","callback","i","item","index","data","item01","index01","e"],"mappings":"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"}
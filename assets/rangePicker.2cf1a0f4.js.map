{"version":3,"file":"rangePicker.2cf1a0f4.js","sources":["../src/components/TableInfo/fieldFile/rangePicker.tsx"],"sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport styled, {ThemeProvider} from 'styled-components';\n\nimport {connect} from \"dva\";\nimport {DatePicker as _DatePicker} from 'antd';\nimport {TimePicker as _TimePicker} from 'antd';\nimport type {Iconf} from '../TableInfo';\nimport {wrapContext} from '../TableInfo';\nimport {ShowData} from './_css_comm';\n\nimport {\n  Form,\n} from 'antd';\n\n\nconst ARangePicker = _DatePicker.RangePicker;\nconst ARangeTimePicker = _TimePicker.RangePicker;\nconst MRangeTimePicker = styled(ARangeTimePicker)`\n  width: 100%;\n\n  && {\n    padding: 1vh;\n  }\n`;\nconst MRangePicker = styled(ARangePicker)`\n  width: 100%;\n\n  && {\n    padding: 1vh;\n  }\n`;\n\n\ninterface IconfInput extends Iconf {\n  placeholder?: string;\n}\n\ninterface Iinput {\n  dispatch?: any;\n  conf: IconfInput;\n  name: string;\n  rules: any;\n}\n\nfunction formatDate(date) {\n  const filter = [\"YYYY\", \"MM\", \"SS\"];\n  var bol = filter.find(function (item, idx) {\n    return date.indexOf(item) != -1\n  })\n  return bol;\n}\n\nconst RangePicker: React.FC<Iinput> = (props) => {\n  const _: any = props.conf;\n  const {name} = props;\n  const theme: any = useContext(wrapContext);\n\n  const data = theme.form.getFieldValue(name);\n\n  return (\n    <wrapContext.Consumer>\n\n      {(_data): any => {\n        switch (_data.state) {\n          case \"default\" :\n            return <ShowData>{_.defaultValue || \"ã€€\"}</ShowData>;\n            break;\n          case \"edit\" :\n          case \"new\" :\n          case \"disabled\" :\n            return <Form.Item name={name} noStyle\n                              rules={props.rules}>\n              {\n                formatDate(_.format || 'YYYY/MM/DD hh:mm:ss') ?\n                  <MRangePicker\n                    style={_.style} showTime={_.showTime} showToday={_.showToday}\n                    disabled={_data.state === 'disabled'}\n                    format={_.format || 'YYYY/MM/DD hh:mm:ss'}\n                  />\n                  :\n                  <MRangeTimePicker\n                    style={_.style} showTime={_.showTime} showToday={_.showToday}\n                    disabled={_data.state === 'disabled'}\n                    format={_.format || 'hh:mm:ss'}\n                  />\n              }\n\n            </Form.Item>\n            break;\n        }\n      }}\n    </wrapContext.Consumer>\n  );\n};\nexport default connect(({}) => ({}))(RangePicker);\n"],"names":["ARangePicker","_DatePicker","ARangeTimePicker","_TimePicker","MRangeTimePicker","styled","MRangePicker","formatDate","date","bol","item","idx","RangePicker","props","_","name","useContext","wrapContext","React","_data","ShowData","Form","rangePicker","connect"],"mappings":"kbAUA,MACEA,EAAAC,EAAA,YACKC,EAAAC,EAAA,YAGDC,EAA2BC,EAAAH,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAEeI,EAAAD,EAAAL,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOR,SAAAO,EAAAC,EAAA,CAoBxC,IAAAC,EApBwC,CAAA,OAAA,KAAA,IAAA,OAoBd,SAAAC,EAAAC,EAAA,CACxB,OAAeH,EAAA,QAASE,CAAA,GAAU,EAClC,CAAA,EACS,OAAAD,CAAsB,CAE/B,MAAOG,EAAAC,GAAA,CACT,MAAAC,EAAAD,EAAA,KAEM,CACJ,KAAAE,CACM,EAAAF,EAGO,OAFMG,qBAAWC,CAAW,EAEtB,KAAK,cAAcF,CAAI,EAGvCG,EAAA,cAAAD,EAAA,SAAA,KAAAE,GAEkB,CACf,OAAQA,EAAM,WACP,UACH,OAAQD,EAAA,cAAAE,EAAA,KAAAN,EAAY,cAAA,QAAoB,MAErC,WACA,UACA,WACI,OAAAI,EAAA,cAAAG,OAAC,CAAU,KAAAN,EAAY,QAAO,GACnB,MAAOF,EAAM,KAAA,EAE3BN,EAAWO,EAAE,QAAU,qBAAqB,EACzCI,EAAA,cAAAZ,EAAA,CACC,MAAOQ,EAAE,MAAO,SAAUA,EAAE,SAAU,UAAWA,EAAE,UACnD,SAAUK,EAAM,QAAU,WAC1B,OAAQL,EAAE,QAAU,qBAAA,CACtB,EAECI,EAAA,cAAAd,EAAA,CACC,MAAOU,EAAE,MAAO,SAAUA,EAAE,SAAU,UAAWA,EAAE,UACnD,SAAUK,EAAM,QAAU,WAC1B,OAAQL,EAAE,QAAU,UACtB,CAAA,CAGN,EACA,CAGR,CAEJ,EACA,IAAeQ,EAAAC,EAAQ,CAAC,MAAQ,GAAG,EAAEX,CAAW"}
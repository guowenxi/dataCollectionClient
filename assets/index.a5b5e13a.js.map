{"version":3,"file":"index.a5b5e13a.js","sources":["../node_modules/_ahooks@3.7.3@ahooks/es/useDynamicList/index.js"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\nconst useDynamicList = (initialList = []) => {\n  const counterRef = useRef(-1);\n  const keyList = useRef([]);\n  const setKey = useCallback(index => {\n    counterRef.current += 1;\n    keyList.current.splice(index, 0, counterRef.current);\n  }, []);\n  const [list, setList] = useState(() => {\n    initialList.forEach((_, index) => {\n      setKey(index);\n    });\n    return initialList;\n  });\n  const resetList = useCallback(newList => {\n    keyList.current = [];\n    setList(() => {\n      newList.forEach((_, index) => {\n        setKey(index);\n      });\n      return newList;\n    });\n  }, []);\n  const insert = useCallback((index, item) => {\n    setList(l => {\n      const temp = [...l];\n      temp.splice(index, 0, item);\n      setKey(index);\n      return temp;\n    });\n  }, []);\n  const getKey = useCallback(index => keyList.current[index], []);\n  const getIndex = useCallback(key => keyList.current.findIndex(ele => ele === key), []);\n  const merge = useCallback((index, items) => {\n    setList(l => {\n      const temp = [...l];\n      items.forEach((_, i) => {\n        setKey(index + i);\n      });\n      temp.splice(index, 0, ...items);\n      return temp;\n    });\n  }, []);\n  const replace = useCallback((index, item) => {\n    setList(l => {\n      const temp = [...l];\n      temp[index] = item;\n      return temp;\n    });\n  }, []);\n  const remove = useCallback(index => {\n    setList(l => {\n      const temp = [...l];\n      temp.splice(index, 1);\n      // remove keys if necessary\n      try {\n        keyList.current.splice(index, 1);\n      } catch (e) {\n        console.error(e);\n      }\n      return temp;\n    });\n  }, []);\n  const move = useCallback((oldIndex, newIndex) => {\n    if (oldIndex === newIndex) {\n      return;\n    }\n    setList(l => {\n      const newList = [...l];\n      const temp = newList.filter((_, index) => index !== oldIndex);\n      temp.splice(newIndex, 0, newList[oldIndex]);\n      // move keys if necessary\n      try {\n        const keyTemp = keyList.current.filter((_, index) => index !== oldIndex);\n        keyTemp.splice(newIndex, 0, keyList.current[oldIndex]);\n        keyList.current = keyTemp;\n      } catch (e) {\n        console.error(e);\n      }\n      return temp;\n    });\n  }, []);\n  const push = useCallback(item => {\n    setList(l => {\n      setKey(l.length);\n      return l.concat([item]);\n    });\n  }, []);\n  const pop = useCallback(() => {\n    // remove keys if necessary\n    try {\n      keyList.current = keyList.current.slice(0, keyList.current.length - 1);\n    } catch (e) {\n      console.error(e);\n    }\n    setList(l => l.slice(0, l.length - 1));\n  }, []);\n  const unshift = useCallback(item => {\n    setList(l => {\n      setKey(0);\n      return [item].concat(l);\n    });\n  }, []);\n  const shift = useCallback(() => {\n    // remove keys if necessary\n    try {\n      keyList.current = keyList.current.slice(1, keyList.current.length);\n    } catch (e) {\n      console.error(e);\n    }\n    setList(l => l.slice(1, l.length));\n  }, []);\n  const sortList = useCallback(result => result.map((item, index) => ({\n    key: index,\n    item\n  })) // add index into obj\n  .sort((a, b) => getIndex(a.key) - getIndex(b.key)) // sort based on the index of table\n  .filter(item => !!item.item) // remove undefined(s)\n  .map(item => item.item),\n  // retrive the data\n  []);\n  return {\n    list,\n    insert,\n    merge,\n    replace,\n    remove,\n    getKey,\n    getIndex,\n    move,\n    push,\n    pop,\n    unshift,\n    shift,\n    sortList,\n    resetList\n  };\n};\nexport default useDynamicList;"],"names":["useDynamicList","initialList","counterRef","useRef","keyList","setKey","useCallback","index","list","setList","useState","_","resetList","newList","insert","item","l","temp","getKey","getIndex","key","ele","merge","items","i","replace","remove","e","move","oldIndex","newIndex","keyTemp","push","pop","unshift","shift","sortList","result","a","b","useDynamicList$1"],"mappings":"wCACA,MAAMA,EAAiB,CAACC,EAAc,KAAO,CAC3C,MAAMC,EAAaC,EAAAA,QAAAA,OAAO,EAAE,EACtBC,EAAUD,iBAAO,CAAA,CAAE,EACnBE,EAASC,EAAW,QAAA,YAACC,GAAS,CAClCL,EAAW,SAAW,EACtBE,EAAQ,QAAQ,OAAOG,EAAO,EAAGL,EAAW,OAAO,CACpD,EAAE,CAAE,CAAA,EACC,CAACM,EAAMC,CAAO,EAAIC,EAAQ,QAAA,SAAC,KAC/BT,EAAY,QAAQ,CAACU,EAAGJ,IAAU,CAChCF,EAAOE,CAAK,CAClB,CAAK,EACMN,EACR,EACKW,EAAYN,EAAW,QAAA,YAACO,GAAW,CACvCT,EAAQ,QAAU,GAClBK,EAAQ,KACNI,EAAQ,QAAQ,CAACF,EAAGJ,IAAU,CAC5BF,EAAOE,CAAK,CACpB,CAAO,EACMM,EACR,CACF,EAAE,CAAE,CAAA,EACCC,EAASR,EAAAA,QAAAA,YAAY,CAACC,EAAOQ,IAAS,CAC1CN,EAAQO,GAAK,CACX,MAAMC,EAAO,CAAC,GAAGD,CAAC,EAClB,OAAAC,EAAK,OAAOV,EAAO,EAAGQ,CAAI,EAC1BV,EAAOE,CAAK,EACLU,CACb,CAAK,CACF,EAAE,CAAE,CAAA,EACCC,EAASZ,EAAW,QAAA,YAACC,GAASH,EAAQ,QAAQG,GAAQ,CAAA,CAAE,EACxDY,EAAWb,EAAAA,QAAAA,YAAYc,GAAOhB,EAAQ,QAAQ,UAAUiB,GAAOA,IAAQD,CAAG,EAAG,CAAE,CAAA,EAC/EE,EAAQhB,EAAAA,QAAAA,YAAY,CAACC,EAAOgB,IAAU,CAC1Cd,EAAQO,GAAK,CACX,MAAMC,EAAO,CAAC,GAAGD,CAAC,EAClB,OAAAO,EAAM,QAAQ,CAACZ,EAAGa,IAAM,CACtBnB,EAAOE,EAAQiB,CAAC,CACxB,CAAO,EACDP,EAAK,OAAOV,EAAO,EAAG,GAAGgB,CAAK,EACvBN,CACb,CAAK,CACF,EAAE,CAAE,CAAA,EACCQ,EAAUnB,EAAAA,QAAAA,YAAY,CAACC,EAAOQ,IAAS,CAC3CN,EAAQO,GAAK,CACX,MAAMC,EAAO,CAAC,GAAGD,CAAC,EAClB,OAAAC,EAAKV,GAASQ,EACPE,CACb,CAAK,CACF,EAAE,CAAE,CAAA,EACCS,EAASpB,EAAW,QAAA,YAACC,GAAS,CAClCE,EAAQO,GAAK,CACX,MAAMC,EAAO,CAAC,GAAGD,CAAC,EAClBC,EAAK,OAAOV,EAAO,CAAC,EAEpB,GAAI,CACFH,EAAQ,QAAQ,OAAOG,EAAO,CAAC,CAChC,OAAQoB,EAAP,CACA,QAAQ,MAAMA,CAAC,CAChB,CACD,OAAOV,CACb,CAAK,CACF,EAAE,CAAE,CAAA,EACCW,EAAOtB,EAAAA,QAAAA,YAAY,CAACuB,EAAUC,IAAa,CAC3CD,IAAaC,GAGjBrB,EAAQO,GAAK,CACX,MAAMH,EAAU,CAAC,GAAGG,CAAC,EACfC,EAAOJ,EAAQ,OAAO,CAACF,EAAGJ,IAAUA,IAAUsB,CAAQ,EAC5DZ,EAAK,OAAOa,EAAU,EAAGjB,EAAQgB,EAAS,EAE1C,GAAI,CACF,MAAME,EAAU3B,EAAQ,QAAQ,OAAO,CAACO,EAAGJ,IAAUA,IAAUsB,CAAQ,EACvEE,EAAQ,OAAOD,EAAU,EAAG1B,EAAQ,QAAQyB,EAAS,EACrDzB,EAAQ,QAAU2B,CACnB,OAAQJ,EAAP,CACA,QAAQ,MAAMA,CAAC,CAChB,CACD,OAAOV,CACb,CAAK,CACF,EAAE,CAAE,CAAA,EACCe,EAAO1B,EAAW,QAAA,YAACS,GAAQ,CAC/BN,EAAQO,IACNX,EAAOW,EAAE,MAAM,EACRA,EAAE,OAAO,CAACD,CAAI,CAAC,EACvB,CACF,EAAE,CAAE,CAAA,EACCkB,EAAM3B,EAAAA,QAAAA,YAAY,IAAM,CAE5B,GAAI,CACFF,EAAQ,QAAUA,EAAQ,QAAQ,MAAM,EAAGA,EAAQ,QAAQ,OAAS,CAAC,CACtE,OAAQ,EAAP,CACA,QAAQ,MAAM,CAAC,CAChB,CACDK,EAAQO,GAAKA,EAAE,MAAM,EAAGA,EAAE,OAAS,CAAC,CAAC,CACtC,EAAE,CAAE,CAAA,EACCkB,EAAU5B,EAAW,QAAA,YAACS,GAAQ,CAClCN,EAAQO,IACNX,EAAO,CAAC,EACD,CAACU,CAAI,EAAE,OAAOC,CAAC,EACvB,CACF,EAAE,CAAE,CAAA,EACCmB,EAAQ7B,EAAAA,QAAAA,YAAY,IAAM,CAE9B,GAAI,CACFF,EAAQ,QAAUA,EAAQ,QAAQ,MAAM,EAAGA,EAAQ,QAAQ,MAAM,CAClE,OAAQ,EAAP,CACA,QAAQ,MAAM,CAAC,CAChB,CACDK,EAAQO,GAAKA,EAAE,MAAM,EAAGA,EAAE,MAAM,CAAC,CAClC,EAAE,CAAE,CAAA,EACCoB,EAAW9B,EAAAA,QAAAA,YAAY+B,GAAUA,EAAO,IAAI,CAACtB,EAAMR,KAAW,CAClE,IAAKA,EACL,KAAAQ,CACJ,EAAI,EACD,KAAK,CAACuB,EAAGC,IAAMpB,EAASmB,EAAE,GAAG,EAAInB,EAASoB,EAAE,GAAG,CAAC,EAChD,OAAOxB,GAAQ,CAAC,CAACA,EAAK,IAAI,EAC1B,IAAIA,GAAQA,EAAK,IAAI,EAEtB,CAAA,CAAE,EACF,MAAO,CACL,KAAAP,EACA,OAAAM,EACA,MAAAQ,EACA,QAAAG,EACA,OAAAC,EACA,OAAAR,EACA,SAAAC,EACA,KAAAS,EACA,KAAAI,EACA,IAAAC,EACA,QAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAxB,CACJ,CACA,EACA,IAAA4B,EAAexC"}